e3r11p9% pwd
/mnt/nfs/homes/hauerbac
e3r11p9% ls
c_00  c_02  Desktop    Downloads  Pictures  rush_00  sgoinfre  shell_01   Videos
c_01  c_03  Documents  Music	  Public    samed    shell_00  Templates
e3r11p9% mkdir c_04
e3r11p9% cd c_04
e3r11p9% mkdir ex00
e3r11p9% cd ex00 
e3r11p9% vi ft_strlen.c
e3r11p9% cat ft_strlen.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_strlen.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:07:36 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/18 19:07:41 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

int	ft_strlen(char *str)
{
	int	i;

	i = 0;
	while (str && str[i] != '\0')
	{
		i++;
	}
	return (i);
}
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_strlen.c 
ft_strlen.c: OK!
e3r11p9% cp ft_strlen.c test_ft_strlen.c 
e3r11p9% vi test_ft_strlen.c 
e3r11p9% cat test_ft_strlen.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_strlen.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:15:44 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/18 19:15:46 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdio.h>
#include <stddef.h>

int	ft_strlen(char *str);

int	main(void)
{
	printf("La taille d'une chaine \"NULL\" est :\t%d\n", ft_strlen(NULL));
	printf("La taille d'une chaine \"vide\" est :\t%d\n", ft_strlen(""));
	printf("La taille de la chaine \"Piscine de fevrier 2023\" est :\t%d\n", ft_strlen("Piscine de fevrier 2023"));
	return (0);
}
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_strlen.c 
test_ft_strlen.c: Error!
Error: LINE_TOO_LONG        (line:  22, col:  83):	line too long
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_strlen ft_strlen.c test_ft_strlen.c 
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 18 19:16 .
drwxr-xr-x 3 hauerbac 2023_paris  4096 Feb 18 18:39 ..
-rw-r--r-- 1 hauerbac 2023_paris   995 Feb 18 19:07 ft_strlen.c
-rwxr-xr-x 1 hauerbac 2023_paris 16032 Feb 18 19:16 test_ft_strlen
-rw-r--r-- 1 hauerbac 2023_paris  1248 Feb 18 19:15 test_ft_strlen.c
e3r11p9% ./test_ft_strlen 
La taille d'une chaine "NULL" est :	0
La taille d'une chaine "vide" est :	0
La taille de la chaine "Piscine de fevrier 2023" est :	23
e3r11p9% cd ..
e3r11p9% ls
ex00
e3r11p9% git clone git@vogsphere.42paris.fr:vogsphere/intra-uuid-d4eec565-5aac-454b-bfc9-f23dd065ac43-4702036-hauerbac git_c_04
Cloning into 'git_c_04'...
warning: You appear to have cloned an empty repository.
e3r11p9% ls
ex00  git_c_04
e3r11p9% mkdir git_c_04/ex00
e3r11p9% ls                   
ex00  git_c_04
e3r11p9% cp ex00/ft_strlen.c git_c_04/ex00/ft_strlen.c      
e3r11p9% cd git_c_04 
e3r11p9% git add ex00/ft_strlen.c
e3r11p9% git commit -m "Addition of ex00 file"
[master (root-commit) 8998a82] Addition of ex00 file
 Committer: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 23 insertions(+)
 create mode 100644 ex00/ft_strlen.c
e3r11p9% git push
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (4/4), 527 bytes | 527.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
remote: . Processing 1 references
remote: Processed 1 references in total
To vogsphere.42paris.fr:vogsphere/intra-uuid-d4eec565-5aac-454b-bfc9-f23dd065ac43-4702036-hauerbac
 * [new branch]      master -> master
e3r11p9% cd ..
e3r11p9% ls
ex00  git_c_04
e3r11p9% mkdir ex01
e3r11p9% mkdir git_c_04/ex01
e3r11p9% cd ex01
e3r11p9% vi ft_putstr.c
e3r11p9% cat ft_putstr.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putstr.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:24:14 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/18 19:24:17 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <unistd.h>

void	ft_putstr(char *str)
{
	int	i;

	i = 0;
	while (str && str[i] != '\0')
	{
		write(1, &str[i], 1);
		i++;
	}
}
e3r11p9% vi test_ft_putstr.c 
e3r11p9% cat test_ft_putstr.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_putstr.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:25:38 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/18 19:25:40 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stddef.h>

void	ft_putstr(char *str);

int	main(void)
{
	ft_putstr(NULL);
	ft_putstr("La chaine qui suit est vide.\n");
	ft_putstr("");
	ft_putstr(" ~\n  !@42\\'`\";:.,/?+-()*&^%$#=[]{}\vest trop\tbIZaRRE");
	return (0);
}
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putstr.c     
ft_putstr.c: OK!
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_putstr.c 
test_ft_putstr.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putstr ft_putstr.c test_ft_putstr.c 
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 18 19:26 .
drwxr-xr-x 5 hauerbac 2023_paris  4096 Feb 18 19:22 ..
-rw-r--r-- 1 hauerbac 2023_paris  1028 Feb 18 19:24 ft_putstr.c
-rwxr-xr-x 1 hauerbac 2023_paris 16032 Feb 18 19:26 test_ft_putstr
-rw-r--r-- 1 hauerbac 2023_paris  1125 Feb 18 19:25 test_ft_putstr.c
e3r11p9% ./test_ft_putstr 
La chaine qui suit est vide.
 ~
  !@42\'`";:.,/?+-()*&^%$#=[]{}
                               est trop	bIZaRRE%                                                                   e3r11p9% vi test_ft_putstr.c                                
e3r11p9% cat test_ft_putstr.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_putstr.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:25:38 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/18 19:27:55 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stddef.h>

void	ft_putstr(char *str);

int	main(void)
{
	ft_putstr(NULL);
	ft_putstr("La chaine qui suit est vide.\n");
	ft_putstr("");
	ft_putstr("\n");
	ft_putstr(" ~\n  !@42\\'`\";:.,/?+-()*&^%$#=[]{}\vest trop\tbIZaRRE");
	return (0);
}
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_putstr.c               
test_ft_putstr.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putstr ft_putstr.c test_ft_putstr.c
e3r11p9% ls -al                                                 
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 18 19:28 .
drwxr-xr-x 5 hauerbac 2023_paris  4096 Feb 18 19:22 ..
-rw-r--r-- 1 hauerbac 2023_paris  1028 Feb 18 19:24 ft_putstr.c
-rwxr-xr-x 1 hauerbac 2023_paris 16032 Feb 18 19:28 test_ft_putstr
-rw-r--r-- 1 hauerbac 2023_paris  1143 Feb 18 19:27 test_ft_putstr.c
e3r11p9% ./test_ft_putstr                                       
La chaine qui suit est vide.

 ~
  !@42\'`";:.,/?+-()*&^%$#=[]{}
                               est trop	bIZaRRE%                                                                   e3r11p9% cd ..
e3r11p9% ls
ex00  ex01  git_c_04
e3r11p9% cp ex01/ft_putstr.c git_c_04/ex01/ft_putstr.c
e3r11p9% cd git_c_04 
e3r11p9% git add ex01/ft_putstr.c
e3r11p9% git commit -m "Addition of ex01 file"
[master 01ec028] Addition of ex01 file
 Committer: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 25 insertions(+)
 create mode 100644 ex01/ft_putstr.c
e3r11p9% git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 607 bytes | 607.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
remote: . Processing 1 references
remote: Processed 1 references in total
To vogsphere.42paris.fr:vogsphere/intra-uuid-d4eec565-5aac-454b-bfc9-f23dd065ac43-4702036-hauerbac
   8998a82..01ec028  master -> master
e3r11p9% cd ..
e3r11p9% mkdir ex02
e3r11p9% mkdir git_c_04/ex02
e3r11p9% cd ex02
e3r11p9% vi ft_putnbr.c
e3r11p9% cat ft_putnbr.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:35:58 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/18 19:36:00 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <unistd.h>

void	ft_putnbr(int nb)
{
	long	nb_in_long;
	int		digit_to_char;

	nb_in_long = nb;
	if (nb_in_long < 0)
	{
		write(1, "-", 1);
		nb_in_long = nb_in_long * -1;
	}
	if (nb_in_long < 10)
	{
		digit_to_char = nb_in_long + '0';
		write(1, &digit_to_char, 1);
	}
	else
	{
		ft_putnbr(nb_in_long / 10);
		ft_putnbr(nb_in_long % 10);
	}
}
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr.c                    
ft_putnbr.c: OK!
e3r11p9% vi test_ft_putnbr.c 
e3r11p9% cat test_ft_putnbr.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_putnbr.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:37:17 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/18 19:37:19 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>
#include <unistd.h>

void	ft_putnbr(int nb);

int	main(void)
{
	ft_putnbr(INT_MIN);
	write(1, "\n", 1);
	ft_putnbr(INT_MAX);
	write(1, "\n", 1);
	ft_putnbr(-42);
	write(1, "\n", 1);
	ft_putnbr(0);
	write(1, "\n", 1);
	ft_putnbr(42);
	write(1, "\nFin Test\n", 10);
	return (0);
}
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_putnbr.c 
test_ft_putnbr.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr ft_putnbr.c test_ft_putnbr.c 
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 18 19:37 .
drwxr-xr-x 6 hauerbac 2023_paris  4096 Feb 18 19:30 ..
-rw-r--r-- 1 hauerbac 2023_paris  1244 Feb 18 19:36 ft_putnbr.c
-rwxr-xr-x 1 hauerbac 2023_paris 16080 Feb 18 19:37 test_ft_putnbr
-rw-r--r-- 1 hauerbac 2023_paris  1191 Feb 18 19:37 test_ft_putnbr.c
e3r11p9% ./test_ft_putnbr 
-2147483648
2147483647
-42
0
42
Fin Test
e3r11p9% cd ..
e3r11p9% cp ex02/ft_putnbr.c git_c_04/ex02/ft_putnbr.c
e3r11p9% cd git_c_04 
e3r11p9% git add ex02/ft_putnbr.c
e3r11p9% git commit -m "Addition of ex02 file"
[master f253524] Addition of ex02 file
 Committer: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 36 insertions(+)
 create mode 100644 ex02/ft_putnbr.c
e3r11p9% git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 687 bytes | 687.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
remote: . Processing 1 references
remote: Processed 1 references in total
To vogsphere.42paris.fr:vogsphere/intra-uuid-d4eec565-5aac-454b-bfc9-f23dd065ac43-4702036-hauerbac
   01ec028..f253524  master -> master
e3r11p9% git log
commit f253524d685a858acde2277e6c6543306ffabc9a (HEAD -> master, origin/master)
Author: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Date:   Sat Feb 18 19:39:09 2023 +0100

    Addition of ex02 file

commit 01ec02880ad6675ccd5d50765208c6633aa88fb0
Author: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Date:   Sat Feb 18 19:29:25 2023 +0100

    Addition of ex01 file

commit 8998a821c841421d295279d659ea4dc28bc10278
Author: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Date:   Sat Feb 18 19:20:49 2023 +0100

    Addition of ex00 file
------------------------------------------------------------------------------------------------------------
e3r11p9% pwd
/mnt/nfs/homes/hauerbac
e3r11p9% cd c_04
e3r11p9% ls
ex00  ex01  ex02  git_c_04
e3r11p9% mkdir ex03
e3r11p9% mkdir git_c_04/ex03 
e3r11p9% cd ex03
e3r11p9% vi ft_atoi.c
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c
ft_atoi.c: Error!
Error: SPC_AFTER_POINTER    (line:  15, col:  49):	space after pointer
Error: SPC_AFTER_POINTER    (line:  31, col:  61):	space after pointer
Error: TAB_INSTEAD_SPC      (line:  36, col:  11):	Found tab when expecting space
Error: SPC_BFR_OPERATOR     (line:  36, col:  13):	missing space before operator
Error: TOO_MANY_TAB         (line:  70, col:   1):	Extra tabs for indent level
Error: TOO_MANY_TAB         (line:  75, col:   1):	Extra tabs for indent level
e3r11p9% 
e3r11p9% vi ft_atoi.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c
ft_atoi.c: OK!
e3r11p9% cat ft_atoi.c                                   
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 08:47:59 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (i <= INT_MAX && str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = i;
		while (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = i++;
		if (boundaries[0] > INT_MAX || boundaries[1] > INT_MAX
			|| boundaries[0] > boundaries[1])
				result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries[2], str);
	result = 1;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		result = error_or_sign * (str[i++] - 48);
		while (i <= boundaries[1])
			result = (result * 10) + (str[i++] - 48);
	}
	return (result);
}
e3r11p9% vi test_ft_atoi.c 
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_atoi.c 
test_ft_atoi.c: Error!
Error: DECL_ASSIGN_LINE     (line:  19, col:  19):	Declaration and assignation on a single line
Error: NL_AFTER_VAR_DECL    (line:  20, col:   1):	Variable declarations must be followed by a newline
e3r11p9% vi test_ft_atoi.c                                  
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_atoi.c
test_ft_atoi.c: Error!
Error: DECL_ASSIGN_LINE     (line:  19, col:  19):	Declaration and assignation on a single line
e3r11p9% cat test_ft_atoi.c                                   
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_atoi.c                                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:52:39 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 08:53:11 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdio.h>

int	ft_atoi(char *str);

int	main(void)
{
	char	str[] = " ---+--+1234ab567";

	printf("We find the number %d into \"%s\"\n", ft_atoi(str), str);
	return (0);
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c 
ft_atoi.c: In function ‘ft_atoi’:
ft_atoi.c:67:45: error: passing argument 1 of ‘ft_error_or_sign’ makes pointer from integer without a cast [-Werror=int-conversion]
   67 |  error_or_sign = ft_error_or_sign(boundaries[2], str);
      |                                   ~~~~~~~~~~^~~
      |                                             |
      |                                             unsigned int
ft_atoi.c:31:35: note: expected ‘unsigned int *’ but argument is of type ‘unsigned int’
   31 | int ft_error_or_sign(unsigned int boundaries[2], const char *str)
      |                      ~~~~~~~~~~~~~^~~~~~~~~~~~~
cc1: all warnings being treated as errors
e3r11p9% vi ft_atoi.c                                      
e3r11p9% vi ft_atoi.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c 
ft_atoi.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c
e3r11p9% cat ft_atoi.c                                      
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 08:57:55 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (i <= INT_MAX && str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = (unsigned int)i;
		while (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = (unsigned int)i++;
		if (boundaries[0] > INT_MAX || boundaries[1] > INT_MAX
			|| boundaries[0] > boundaries[1])
				result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries, str);
	result = 1;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		result = error_or_sign * (str[i++] - 48);
		while (i <= boundaries[1])
			result = (result * 10) + (str[i++] - 48);
	}
	return (result);
}
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 08:58 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  2256 Feb 20 08:57 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 08:58 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1072 Feb 20 08:53 test_ft_atoi.c
e3r11p9% ./test_ft_atoi 
We find the number -766 into " ---+--+1234ab567"
e3r11p9% vi ft_atoi.c                                      
e3r11p9% cat ft_atoi.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:05:47 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>
#include <stdio.h>

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (i <= INT_MAX && str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = (unsigned int)i;
		while (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = (unsigned int)i++;
		if (boundaries[0] > INT_MAX || boundaries[1] > INT_MAX
			|| boundaries[0] > boundaries[1])
				result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries, str);
	result = 1;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		printf("%c %d i = %d\n", str[i], str[i] - 48, i);
		result = error_or_sign * (str[i++] - 48);
		while (i <= boundaries[1])
		{
			printf("%c %d i = %d\n", str[i], str[i] - 48, i);
			result = (result * 10) + (str[i++] - 48);
		}
	}
	return (result);
}
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c
ft_atoi.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c
e3r11p9% ls -al                                           
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:06 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  2388 Feb 20 09:05 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 09:06 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1072 Feb 20 08:53 test_ft_atoi.c
e3r11p9% ./test_ft_atoi                                   
1 1 i = 8
2 2 i = 9
3 3 i = 10
4 4 i = 11
We find the number -766 into " ---+--+1234ab567"
e3r11p9% vi ft_atoi.c                                     
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c
ft_atoi.c: OK!
e3r11p9% cat ft_atoi.c                                    
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:09:04 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>
#include <stdio.h>

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (i <= INT_MAX && str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = (unsigned int)i;
		while (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = (unsigned int)i++;
		if (boundaries[0] > INT_MAX || boundaries[1] > INT_MAX
			|| boundaries[0] > boundaries[1])
				result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries, str);
	result = 1;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		printf("%c %d i = %d\n", str[i], str[i] - 48, i);
		result = error_or_sign * (str[i++] - 48);
		printf("%d i = %d\n", result, i);
		while (i <= boundaries[1])
		{
			printf("%c %d i = %d\n", str[i], str[i] - 48, i);
			result = (result * 10) + (str[i++] - 48);
			printf("%d i = %d\n", result, i);
		}
	}
	return (result);
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c
e3r11p9% ls -al                                            
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:09 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  2461 Feb 20 09:09 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 09:09 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1072 Feb 20 08:53 test_ft_atoi.c
e3r11p9% ./test_ft_atoi                                    
1 1 i = 8
-1 i = 9
2 2 i = 9
-8 i = 10
3 3 i = 10
-77 i = 11
4 4 i = 11
-766 i = 12
We find the number -766 into " ---+--+1234ab567"
e3r11p9% vi ft_atoi.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c                
ft_atoi.c: OK!
e3r11p9% cat ft_atoi.c                                                     
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:12:30 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>
#include <stdio.h>

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (i <= INT_MAX && str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = (unsigned int)i;
		while (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = (unsigned int)i++;
		if (boundaries[0] > INT_MAX || boundaries[1] > INT_MAX
			|| boundaries[0] > boundaries[1])
				result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries, str);
	result = 0;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		printf("%c %d i = %d\n", str[i], str[i] - 48, i);
		result = str[i++] - 48;
		printf("%d i = %d\n", result, i);
		while (i <= boundaries[1])
		{
			printf("%c %d i = %d\n", str[i], str[i] - 48, i);
			result = (result * 10) + (str[i++] - 48);
			printf("%d i = %d\n", result, i);
		}
		result *= error_or_sign;
		printf("%d i = %d\n", result, i);
	}
	return (result);
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c
e3r11p9% ls -al                                            
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:12 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  2506 Feb 20 09:12 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 09:12 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1072 Feb 20 08:53 test_ft_atoi.c
e3r11p9% ./test_ft_atoi                                    
1 1 i = 8
1 i = 9
2 2 i = 9
12 i = 10
3 3 i = 10
123 i = 11
4 4 i = 11
1234 i = 12
-1234 i = 12
We find the number -1234 into " ---+--+1234ab567"
e3r11p9% vi ft_atoi.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c                
ft_atoi.c: OK!
e3r11p9% cat ft_atoi.c                                                     
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:13:53 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (i <= INT_MAX && str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = (unsigned int)i;
		while (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = (unsigned int)i++;
		if (boundaries[0] > INT_MAX || boundaries[1] > INT_MAX
			|| boundaries[0] > boundaries[1])
				result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries, str);
	result = 0;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		result = str[i++] - 48;
		while (i <= boundaries[1])
			result = (result * 10) + (str[i++] - 48);
		result *= error_or_sign;
	}
	return (result);
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c
e3r11p9% ls -al                                            
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:14 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  2265 Feb 20 09:13 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 09:14 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1072 Feb 20 08:53 test_ft_atoi.c
e3r11p9% ./test_ft_atoi                                    
We find the number -1234 into " ---+--+1234ab567"
e3r11p9% cd ..
e3r11p9% cp ex03/ft_atoi.c git_c_04/ex03/ft_atoi.c
e3r11p9% cd git_c_04 
e3r11p9% git add ex03/ft_atoi.c
e3r11p9% git commit -m "Addition of ex03 file"
[master 2a7315c] Addition of ex03 file
 Committer: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 80 insertions(+)
 create mode 100644 ex03/ft_atoi.c
e3r11p9% git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 930 bytes | 930.00 KiB/s, done.
Total 4 (delta 1), reused 0 (delta 0), pack-reused 0
remote: . Processing 1 references
remote: Processed 1 references in total
To vogsphere.42paris.fr:vogsphere/intra-uuid-d4eec565-5aac-454b-bfc9-f23dd065ac43-4702036-hauerbac
   f253524..2a7315c  master -> master
e3r11p9% cd ..
e3r11p9% cd ex03
e3r11p9% vi test_ft_atoi.c
e3r11p9% cat test_ft_atoi.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_atoi.c                                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:52:39 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:25:48 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdio.h>

int	ft_atoi(char *str);

int	main(void)
{
	char	str[] = " ---+--+1234ab567";

	printf("We find the number %d into \"%s\"\n", ft_atoi(str), str);
	printf("42:%d\n", ft_atoi("  \n  42t4457"));
	printf("-42:%d\n", ft_atoi(" --+-42sfs:f545"));
	printf("0:%d\n", ft_atoi("\0 1337"));
	printf("0:%d\n", ft_atoi("-0"));
	printf("0:%d\n", ft_atoi(" - 1 3 2 5 6 3 2 1 6 7"));
	printf("-1325632167:%d\n", ft_atoi("-1325632167"));
	printf("-100:%d\n", ft_atoi("-100"));
	printf("min:%d\n", ft_atoi("\t---+2147483648"));
	printf("max:%d\n", ft_atoi("\v2147483647"));
	return (0);
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:26 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  2265 Feb 20 09:13 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 09:26 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1482 Feb 20 09:25 test_ft_atoi.c
e3r11p9% ./test_ft_atoi 
We find the number -1234 into " ---+--+1234ab567"
42:42
-42:-42
0:0
0:0
0:0
-1325632167:-1325632167
-100:-100
min:-2147483648
max:2147483647
e3r11p9% cd ../ex02
e3r11p9% ls
ft_putnbr.c  test_ft_putnbr  test_ft_putnbr.c
e3r11p9% ./test_ft_putnbr   
-2147483648
2147483647
-42
0
42
Fin Test
e3r11p9% cd ../ex01
e3r11p9% ls
ft_putstr.c  test_ft_putstr  test_ft_putstr.c
e3r11p9% vi test_ft_putstr.c
e3r11p9% cat test_ft_putstr.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_putstr.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:25:38 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:29:13 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stddef.h>

void	ft_putstr(char *str);

int	main(void)
{
	ft_putstr(NULL);
	ft_putstr("La chaine qui suit est vide.\n");
	ft_putstr("");
	ft_putstr("\n");
	ft_putstr(" ~\n  !@42\\'`\";:.,/?+-()*&^%$#=[]{}\vest trop\tbIZaRRE");
	char s1[] = "Suc";
	char s2[] = "cess\n";
	ft_putstr(s1);
	ft_putstr(s2);
	return (0);
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putstr ft_putstr.c test_ft_putstr.c 
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:29 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  1028 Feb 18 19:24 ft_putstr.c
-rwxr-xr-x 1 hauerbac 2023_paris 16080 Feb 20 09:29 test_ft_putstr
-rw-r--r-- 1 hauerbac 2023_paris  1218 Feb 20 09:29 test_ft_putstr.c
e3r11p9% ./test_ft_putstr 
La chaine qui suit est vide.

 ~
  !@42\'`";:.,/?+-()*&^%$#=[]{}
                               est trop	bIZaRRESuccess
e3r11p9% cd ../ex00
e3r11p9% ls
ft_strlen.c  test_ft_strlen  test_ft_strlen.c
e3r11p9% vi test_ft_strlen.c
e3r11p9% cat test_ft_strlen.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_strlen.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:15:44 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:30:59 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdio.h>
#include <stddef.h>

int	ft_strlen(char *str);

int	main(void)
{
	printf("La taille d'une chaine \"NULL\" est :\t%d\n", ft_strlen(NULL));
	printf("La taille d'une chaine \"vide\" est :\t%d\n", ft_strlen(""));
	printf("La taille de la chaine \"Piscine de fevrier 2023\" est :\t%d\n", ft_strlen("Piscine de fevrier 2023"));
	char s1[] = "MyStr";
	char s2[] = "MyTest\nOfSuccess";
	char s3[] = "0123456789abcdef";
	char s4[] = "My\tStr";
	char s5[] = "";
	printf(ft_strlen(s1) == 5 ? "Success\n" : "Fail\n");
	printf(ft_strlen(s2) == 16 ? "Success\n" : "Fail\n");
	printf(ft_strlen(s3) == 16 ? "Success\n" : "Fail\n");
	printf(ft_strlen(s4) == 6 ? "Success\n" : "Fail\n");
	printf(ft_strlen(s5) == 0 ? "Success\n" : "Fail\n");
	return (0);
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_strlen ft_strlen.c test_ft_strlen.c 
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:31 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris   995 Feb 18 19:07 ft_strlen.c
-rwxr-xr-x 1 hauerbac 2023_paris 16080 Feb 20 09:31 test_ft_strlen
-rw-r--r-- 1 hauerbac 2023_paris  1650 Feb 20 09:30 test_ft_strlen.c
e3r11p9% ./test_ft_strlen 
La taille d'une chaine "NULL" est :	0
La taille d'une chaine "vide" est :	0
La taille de la chaine "Piscine de fevrier 2023" est :	23
Success
Success
Success
Success
Success
e3r11p9% cd ..
e3r11p9% pwd
/mnt/nfs/homes/hauerbac/c_04
e3r11p9% cd ex03         
e3r11p9% ls
ft_atoi.c  test_ft_atoi  test_ft_atoi.c
e3r11p9% vi ft_atoi.c 
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c                
ft_atoi.c: OK!
e3r11p9% cat ft_atoi.c                                   
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:44:48 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (i <= INT_MAX && str[i]
			&& str[i] != ' ' && str[i] != '\f'
			&& str[i] != '\n' && str[i] != '\r'
			&& str[i] != '\t' && str[i] != '\v'
			&& str[i] != '+' && str[i] != '-'
			&& !(str[i] >= 48 && str[i] <= 57))
			i++;
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (i <= INT_MAX && str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = (unsigned int)i;
		while (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = (unsigned int)i++;
		if (boundaries[0] > INT_MAX || boundaries[1] > INT_MAX
			|| boundaries[0] > boundaries[1])
				result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries, str);
	result = 0;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		result = str[i++] - 48;
		while (i <= boundaries[1])
			result = (result * 10) + (str[i++] - 48);
		result *= error_or_sign;
	}
	return (result);
}
e3r11p9% vi test_ft_atoi.c
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_atoi
Error: test_ft_atoi is not valid C or C header file
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_atoi.c
test_ft_atoi.c: Error!
Error: DECL_ASSIGN_LINE     (line:  19, col:  19):	Declaration and assignation on a single line
Error: DECL_ASSIGN_LINE     (line:  20, col:  20):	Declaration and assignation on a single line
Error: DECL_ASSIGN_LINE     (line:  21, col:  20):	Declaration and assignation on a single line
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c     
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:49 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  2497 Feb 20 09:44 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 09:49 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1718 Feb 20 09:48 test_ft_atoi.c
e3r11p9% ./test_ft_atoi 
We find the number -1234 into "    ---+--+1234ab567"
We find the number 0 into " cvedrf   ----+---+1234ab567"
We find the number 0 into "  sdfggf  -----+---+1234ab567"
42:42
-42:-42
0:0
0:0
0:0
-1325632167:-1325632167
-100:-100
min:-2147483648
max:2147483647
e3r11p9% vi ft_atoi.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c
ft_atoi.c: OK!
e3r11p9% cat ft_atoi.c                                    
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:52:25 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
		while (i <= INT_MAX && str[i]
			&& str[i] != '+' && str[i] != '-'
			&& !(str[i] >= 48 && str[i] <= 57))
			i++;
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (i <= INT_MAX && str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = (unsigned int)i;
		while (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = (unsigned int)i++;
		if (boundaries[0] > INT_MAX || boundaries[1] > INT_MAX
			|| boundaries[0] > boundaries[1])
				result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries, str);
	result = 0;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		result = str[i++] - 48;
		while (i <= boundaries[1])
			result = (result * 10) + (str[i++] - 48);
		result *= error_or_sign;
	}
	return (result);
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c
e3r11p9% ls -al                                                            
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:52 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  2542 Feb 20 09:52 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 09:52 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1718 Feb 20 09:48 test_ft_atoi.c
e3r11p9% ./test_ft_atoi                                    
We find the number -1234 into "    ---+--+1234ab567"
We find the number -1234 into " cvedrf   ----+---+1234ab567"
We find the number 1234 into "  sdfggf  -----+---+1234ab567"
42:42
-42:-42
0:0
0:0
0:0
-1325632167:-1325632167
-100:-100
min:-2147483648
max:2147483647
e3r11p9% cat test_ft_atoi.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_atoi.c                                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:52:39 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:48:31 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdio.h>

int	ft_atoi(char *str);

int	main(void)
{
	char	str[] = "    ---+--+1234ab567";
	char	str1[] = " cvedrf   ----+---+1234ab567";
	char	str2[] = "  sdfggf  -----+---+1234ab567";

	printf("We find the number %d into \"%s\"\n", ft_atoi(str), str);
	printf("We find the number %d into \"%s\"\n", ft_atoi(str1), str1);
	printf("We find the number %d into \"%s\"\n", ft_atoi(str2), str2);
	printf("42:%d\n", ft_atoi("  \n  42t4457"));
	printf("-42:%d\n", ft_atoi(" --+-42sfs:f545"));
	printf("0:%d\n", ft_atoi("\0 1337"));
	printf("0:%d\n", ft_atoi("-0"));
	printf("0:%d\n", ft_atoi(" - 1 3 2 5 6 3 2 1 6 7"));
	printf("-1325632167:%d\n", ft_atoi("-1325632167"));
	printf("-100:%d\n", ft_atoi("-100"));
	printf("min:%d\n", ft_atoi("\t---+2147483648"));
	printf("max:%d\n", ft_atoi("\v2147483647"));
	return (0);
}
e3r11p9% cd ..
e3r11p9% cp ex03/ft_atoi.c git_c_04/ex03/ft_atoi.c                              
e3r11p9% git add ex03/ft_atoi.c
fatal: not a git repository (or any parent up to mount point /mnt)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
e3r11p9% cd git_c_04 
e3r11p9% git add ex03/ft_atoi.c
e3r11p9% git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	modified:   ex03/ft_atoi.c

e3r11p9% git commit -m "Correction of ex03 file for cases where there are some other characters in front of spaces at the beginning of the string"
[master e1c25dd] Correction of ex03 file for cases where there are some other characters in front of spaces at the beginning of the string
 Committer: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 10 insertions(+), 1 deletion(-)
e3r11p9% fit push
zsh: command not found: fit
e3r11p9% git push
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 474 bytes | 474.00 KiB/s, done.
Total 4 (delta 2), reused 0 (delta 0), pack-reused 0
remote: . Processing 1 references
remote: Processed 1 references in total
To vogsphere.42paris.fr:vogsphere/intra-uuid-d4eec565-5aac-454b-bfc9-f23dd065ac43-4702036-hauerbac
   2a7315c..e1c25dd  master -> master
e3r11p9% cd ..
e3r11p9% pwd
/mnt/nfs/homes/hauerbac/c_04
e3r11p9% mkdir ex04
e3r11p9% mkdir git_c_04/ex04
e3r11p9% cd ex04
e3r11p9% vi ft_putnbr_base.c
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c 
ft_putnbr_base.c: Error!
	Error: Unrecognized token line 136, col 55
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: Error!
Error: WRONG_SCOPE_COMMENT  (line:  76, col:  17):	Comment is invalid in this scope
Error: SPC_BEFORE_NL        (line:  77, col:  46):	Space before newline
Error: TERNARY_FBIDDEN      (line:  81, col:  31):	Ternaries are forbidden
Error: TOO_MANY_LINES       (line:  84, col:   1):	Function has more than 25 lines
Error: RETURN_PARENTHESIS   (line:  89, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line:  91, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line:  93, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line:  95, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line:  97, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line: 103, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line: 105, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line: 107, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line: 109, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line: 111, col:  16):	Return value must be in parenthesis
Error: TOO_MANY_FUNCS       (line: 114, col:   1):	Too many functions in file
--------------------------------------------
return (i == base_len ? base_len : 0);
^I^I^I^I// i-nth position of char into base == value in base 10$
---------------------------------------------
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: Error!
Error: LINE_TOO_LONG        (line:  56, col:  82):	line too long
Error: TOO_MANY_FUNCS       (line: 106, col:   1):	Too many functions in file
Error: TOO_MANY_FUNCS       (line: 120, col:   1):	Too many functions in file
---------------------------------------------
int     int_power(int nb, int exponent)
{
        if (exponent == 0)
                return (1);
        else if (exponent == 1)
                return (nb);
        else if (nb == 0)
                return (0);
        else if (nb == 1)
                return (1);
        else
                return (nb * int_power(nb, exponent - 1));
}

int     int_power_in_base(int nb, int base_len, int exponent)
{
        if (exponent == 0)
                return (nb);
        else if (exponent == 1)
                return (nb * base_len);
        else if (nb == 0)
                return (0);
        else if (nb == 1)
                return (int_power(base_len, exponent));
        else
                return (base_len * int_power_in_base(nb, base_len, exponent - 1));
}
---------------------------------------------
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: Error!
Error: LINE_TOO_LONG        (line:  56, col:  82):	line too long
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: OK!
e3r11p9% cat ft_putnbr_base.c
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 14:42:06 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stddef.h>
#include <limits.h>
#include <unistd.h>

int	ft_error_or_strlen(char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	return (result);
}

int	ft_checked_into_base(int *base_into_numbers, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (base_into_numbers && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && base_into_numbers[i])
		{
			if (c == base_into_numbers[i])
				return (0);
			i++;
		}
		result = i == base_len;
	}
	return (result);
}

int	ft_error_or_correct_base(int *numbers_for_base, const char *str
		, int base_len)
{
	int	i;

	numbers_for_base = (int *) malloc(base_len * sizeof(int));
	if (numbers_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(numbers_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				numbers_for_base[i] = str[i];
				i++;
			}
		}
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(int *numbers_for_base, const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(numbers_for_base, str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		*numbers_for_base;
	int		base_len;
	long	nbr_in_long;

	base_len = ft_error_or_base(numbers_for_base, base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			if (nb_in_long < 0)
			{
				write(1, "-", 1);
				nb_in_long = nb_in_long * -1;
			}
			if (nb_in_long < base_len)
				write(1, &numbers_for_base[nb_in_long], 1);
			else
			{
				ft_putnbr_base(nb_in_long / base_len, base);
				ft_putnbr_base(nb_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% vi test_ft_putnbr_base.c
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_putnbr_base.c 
test_ft_putnbr_base.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c 
ft_putnbr_base.c: In function ‘ft_error_or_correct_base’:
ft_putnbr_base.c:61:29: error: implicit declaration of function ‘malloc’ [-Werror=implicit-function-declaration]
   61 |  numbers_for_base = (int *) malloc(base_len * sizeof(int));
      |                             ^~~~~~
ft_putnbr_base.c:61:29: error: incompatible implicit declaration of built-in function ‘malloc’ [-Werror]
ft_putnbr_base.c:16:1: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
   15 | #include <unistd.h>
  +++ |+#include <stdlib.h>
   16 | 
ft_putnbr_base.c: In function ‘ft_error_or_base’:
ft_putnbr_base.c:87:32: error: passing argument 1 of ‘ft_error_or_strlen’ discards ‘const’ qualifier from pointer target type [-Werror=discarded-qualifiers]
   87 |  base_len = ft_error_or_strlen(str);
      |                                ^~~
ft_putnbr_base.c:17:30: note: expected ‘char *’ but argument is of type ‘const char *’
   17 | int ft_error_or_strlen(char *str)
      |                        ~~~~~~^~~
ft_putnbr_base.c: In function ‘ft_putnbr_base’:
ft_putnbr_base.c:105:8: error: ‘nb_in_long’ undeclared (first use in this function); did you mean ‘nbr_in_long’?
  105 |    if (nb_in_long < 0)
      |        ^~~~~~~~~~
      |        nbr_in_long
ft_putnbr_base.c:105:8: note: each undeclared identifier is reported only once for each function it appears in
ft_putnbr_base.c:97:7: error: variable ‘nbr_in_long’ set but not used [-Werror=unused-but-set-variable]
   97 |  long nbr_in_long;
      |       ^~~~~~~~~~~
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c   
ft_putnbr_base.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_putnbr_base’:
ft_putnbr_base.c:101:14: error: ‘INT_MIN’ undeclared (first use in this function)
  101 |   if (nbr >= INT_MIN && nbr <= INT_MAX)
      |              ^~~~~~~
ft_putnbr_base.c:15:1: note: ‘INT_MIN’ is defined in header ‘<limits.h>’; did you forget to ‘#include <limits.h>’?
   14 | #include <unistd.h>
  +++ |+#include <limits.h>
   15 | 
ft_putnbr_base.c:101:14: note: each undeclared identifier is reported only once for each function it appears in
  101 |   if (nbr >= INT_MIN && nbr <= INT_MAX)
      |              ^~~~~~~
ft_putnbr_base.c:101:32: error: ‘INT_MAX’ undeclared (first use in this function)
  101 |   if (nbr >= INT_MIN && nbr <= INT_MAX)
      |                                ^~~~~~~
ft_putnbr_base.c:101:32: note: ‘INT_MAX’ is defined in header ‘<limits.h>’; did you forget to ‘#include <limits.h>’?
e3r11p9% 
e3r11p9% cat ft_putnbr_base.c                                   
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 14:53:18 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <unistd.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	return (result);
}

int	ft_checked_into_base(int *base_into_numbers, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (base_into_numbers && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && base_into_numbers[i])
		{
			if (c == base_into_numbers[i])
				return (0);
			i++;
		}
		result = i == base_len;
	}
	return (result);
}

int	ft_error_or_correct_base(int *numbers_for_base, const char *str
		, int base_len)
{
	int	i;

	numbers_for_base = (int *) malloc(base_len * sizeof(int));
	if (numbers_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(numbers_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				numbers_for_base[i] = str[i];
				i++;
			}
		}
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(int *numbers_for_base, const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(numbers_for_base, str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		*numbers_for_base;
	int		base_len;
	long	nbr_in_long;

	base_len = ft_error_or_base(numbers_for_base, base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			if (nbr_in_long < base_len)
				write(1, &numbers_for_base[nbr_in_long], 1);
			else
			{
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c        
ft_putnbr_base.c: OK!
e3r11p9% cat ft_putnbr_base.c                                     
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 14:54:54 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <limits.h>
#include <unistd.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	return (result);
}

int	ft_checked_into_base(int *base_into_numbers, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (base_into_numbers && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && base_into_numbers[i])
		{
			if (c == base_into_numbers[i])
				return (0);
			i++;
		}
		result = i == base_len;
	}
	return (result);
}

int	ft_error_or_correct_base(int *numbers_for_base, const char *str
		, int base_len)
{
	int	i;

	numbers_for_base = (int *) malloc(base_len * sizeof(int));
	if (numbers_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(numbers_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				numbers_for_base[i] = str[i];
				i++;
			}
		}
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(int *numbers_for_base, const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(numbers_for_base, str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		*numbers_for_base;
	int		base_len;
	long	nbr_in_long;

	base_len = ft_error_or_base(numbers_for_base, base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			if (nbr_in_long < base_len)
				write(1, &numbers_for_base[nbr_in_long], 1);
			else
			{
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_putnbr_base’:
ft_putnbr_base.c:99:13: error: ‘numbers_for_base’ is used uninitialized in this function [-Werror=uninitialized]
   99 |  base_len = ft_error_or_base(numbers_for_base, base);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c        
ft_putnbr_base.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_putnbr_base’:
ft_putnbr_base.c:101:13: error: ‘numbers_for_base’ is used uninitialized in this function [-Werror=uninitialized]
  101 |  base_len = ft_error_or_base(numbers_for_base, base);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c
/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/10/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x1b): undefined reference to `main'
collect2: error: ld returned 1 exit status
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c 
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 15:06 .
drwxr-xr-x 8 hauerbac 2023_paris  4096 Feb 20 10:12 ..
-rw-r--r-- 1 hauerbac 2023_paris  2905 Feb 20 15:05 ft_putnbr_base.c
-rwxr-xr-x 1 hauerbac 2023_paris 16256 Feb 20 15:06 test_ft_putnbr_base
-rw-r--r-- 1 hauerbac 2023_paris  1382 Feb 20 14:48 test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base 
42:
2a:
-2a:-
:
:
:
:%                                                                                                 e3r11p9% cat ft_putnbr_base.c                                           
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 15:05:56 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <stddef.h>
#include <limits.h>
#include <unistd.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	return (result);
}

int	ft_checked_into_base(int *base_into_numbers, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (base_into_numbers && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && base_into_numbers[i])
		{
			if (c == base_into_numbers[i])
				return (0);
			i++;
		}
		result = i == base_len;
	}
	return (result);
}

int	ft_error_or_correct_base(int *numbers_for_base, const char *str
		, int base_len)
{
	int	i;

	numbers_for_base = (int *) malloc(base_len * sizeof(int));
	if (numbers_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(numbers_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				numbers_for_base[i] = str[i];
				i++;
			}
		}
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(int *numbers_for_base, const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(numbers_for_base, str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		*numbers_for_base;
	int		base_len;
	long	nbr_in_long;

	numbers_for_base = NULL;
	base_len = ft_error_or_base(numbers_for_base, base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			if (nbr_in_long < base_len)
				write(1, &numbers_for_base[nbr_in_long], 1);
			else
			{
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_error_or_correct_base’:
ft_putnbr_base.c:81:88: error: format ‘%s’ expects argument of type ‘char *’, but argument 5 has type ‘int *’ [-Werror=format=]
   81 | ("ft_error_or_correct_base : base_len = %d i = %d str = %s numbers_for_base = %s\n", base_len, i, str, numbers_for_base);
      |                                                                               ~^                       ~~~~~~~~~~~~~~~~
      |                                                                                |                       |
      |                                                                                char *                  int *
      |                                                                               %ls
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_putnbr_base’:
ft_putnbr_base.c:117:52: error: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long int’ [-Werror=format=]
  117 |     printf("ft_putnbr_base : c = %c nbr_in_long = %d\n", numbers_for_base[nbr_in_long], nbr_in_long);
      |                                                   ~^                                    ~~~~~~~~~~~
      |                                                    |                                    |
      |                                                    int                                  long int
      |                                                   %ld
ft_putnbr_base.c:116:4: error: this ‘if’ clause does not guard... [-Werror=misleading-indentation]
  116 |    if (nbr_in_long < base_len)
      |    ^~
ft_putnbr_base.c:118:5: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
  118 |     write(1, &numbers_for_base[nbr_in_long], 1);
      |     ^~~~~
ft_putnbr_base.c:119:4: error: expected ‘}’ before ‘else’
  119 |    else
      |    ^~~~
ft_putnbr_base.c: At top level:
ft_putnbr_base.c:127:1: error: expected identifier or ‘(’ before ‘}’ token
  127 | }
      | ^
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_putnbr_base’:
ft_putnbr_base.c:118:52: error: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long int’ [-Werror=format=]
  118 |     printf("ft_putnbr_base : c = %c nbr_in_long = %d\n", numbers_for_base[nbr_in_long], nbr_in_long);
      |                                                   ~^                                    ~~~~~~~~~~~
      |                                                    |                                    |
      |                                                    int                                  long int
      |                                                   %ld
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% vi ft_putnbr_base.c
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                  
42:ft_error_or_strlen : 10
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : base_len = 10 base = 0123456789 nbr_in_long = 42
ft_error_or_strlen : 10
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
zsh: segmentation fault (core dumped)  ./test_ft_putnbr_base
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                  
42:ft_error_or_strlen : 10
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 42
zsh: segmentation fault (core dumped)  ./test_ft_putnbr_base
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_error_or_correct_base’:
ft_putnbr_base.c:67:58: error: format ‘%ld’ expects argument of type ‘long int’, but argument 2 has type ‘int *’ [-Werror=format=]
   67 |  printf("ft_error_or_correct_base : numbers_for_base = %ld\n", numbers_for_base);
      |                                                        ~~^     ~~~~~~~~~~~~~~~~
      |                                                          |     |
      |                                                          |     int *
      |                                                          long int
      |                                                        %ls
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                  
42:ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 42
zsh: segmentation fault (core dumped)  ./test_ft_putnbr_base
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_putnbr_base’:
ft_putnbr_base.c:107:21: error: expected expression before ‘{’ token
  107 |  numbers_for_base = {};
      |                     ^
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_putnbr_base’:
ft_putnbr_base.c:107:19: error: expected expression before ‘]’ token
  107 |  numbers_for_base[] = {};
      |                   ^
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                  
42:ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 42
ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 10 base = 0123456789 nbr_in_long = 42
ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 4
ft_putnbr_base : c1 =  nbr_in_long = 4
ft_putnbr_base : c = � nbr_in_long = 4
�ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c = � nbr_in_long = 2
�
2a:ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 42
ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 16 base = 0123456789abcdef nbr_in_long = 42
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c = � nbr_in_long = 2
�ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 10
ft_putnbr_base : c1 =  nbr_in_long = 10
ft_putnbr_base : c = * nbr_in_long = 10
*
-2a:ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = -42
-ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 16 base = 0123456789abcdef nbr_in_long = 42
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c = � nbr_in_long = 2
�ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 10
ft_putnbr_base : c1 =  nbr_in_long = 10
ft_putnbr_base : c = � nbr_in_long = 10
�
:ft_error_or_strlen : 0

:ft_error_or_strlen : 1

:ft_error_or_strlen : 18
ft_error_or_correct_base : malloc size = 72
ft_error_or_correct_base : numbers_for_base = 

:%                                                                                                 e3r11p9% cat ft_putnbr_base.c                                                                 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 15:39:17 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <stddef.h>
#include <limits.h>
#include <unistd.h>
#include <stdio.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	printf("ft_error_or_strlen : %d\n", result); 
	return (result);
}

int	ft_checked_into_base(int *base_into_numbers, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (base_into_numbers && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && base_into_numbers[i])
		{
			if (c == base_into_numbers[i])
				return (0);
			i++;
		}
		result = i == base_len;
		printf("ft_checked_into_base : base_len = %d i = %d result = %d\n", base_len, i, result); 
	}
	return (result);
}

int	ft_error_or_correct_base(int *numbers_for_base, const char *str
		, int base_len)
{
	int	i;

	printf("ft_error_or_correct_base : malloc size = %ld\n", base_len * sizeof(int)); 
	numbers_for_base = (int *) malloc(base_len * sizeof(int));
	printf("ft_error_or_correct_base : numbers_for_base = %ls\n", numbers_for_base); 
	if (numbers_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(numbers_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				numbers_for_base[i] = str[i];
				i++;
			}
		}
		printf("ft_error_or_correct_base : base_len = %d i = %d str = %s\n", base_len, i, str); 
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(int *numbers_for_base, const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(numbers_for_base, str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		*numbers_for_base;
	int		test[1] = {0};
	int		base_len;
	long	nbr_in_long;

	//numbers_for_base = NULL;
	numbers_for_base = test;
	base_len = ft_error_or_base(numbers_for_base, base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			printf("ft_putnbr_base : nbr_in_long = %ld\n", nbr_in_long); 
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			printf("ft_putnbr_base : c1 = %c nbr_in_long = %ld\n", numbers_for_base[1], nbr_in_long); 
			if (nbr_in_long < base_len)
			{
				printf("ft_putnbr_base : c = %c nbr_in_long = %ld\n", numbers_for_base[nbr_in_long], nbr_in_long); 
				write(1, &numbers_for_base[nbr_in_long], 1);
			}
			else
			{
				printf("ft_putnbr_base : base_len = %d base = %s nbr_in_long = %ld\n", base_len, base, nbr_in_long); 
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                  
42:ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 42
ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 10 base = 0123456789 nbr_in_long = 42
ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 4
ft_putnbr_base : c1 =  nbr_in_long = 4
ft_putnbr_base : c =  nbr_in_long = 4
ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c =  nbr_in_long = 2

2a:ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 42
ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 16 base = 0123456789abcdef nbr_in_long = 42
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c =  nbr_in_long = 2
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 10
ft_putnbr_base : c1 =  nbr_in_long = 10
ft_putnbr_base : c =  nbr_in_long = 10

-2a:ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = -42
-ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 16 base = 0123456789abcdef nbr_in_long = 42
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c =  nbr_in_long = 2
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 10
ft_putnbr_base : c1 =  nbr_in_long = 10
ft_putnbr_base : c =  nbr_in_long = 10

:ft_error_or_strlen : 0

:ft_error_or_strlen : 1

:ft_error_or_strlen : 18
ft_error_or_correct_base : malloc size = 72
ft_error_or_correct_base : numbers_for_base = 

:%                                                                                                 e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                  
42:ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 42
ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 10 base = 0123456789 nbr_in_long = 42
ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 4
ft_putnbr_base : c1 =  nbr_in_long = 4
ft_putnbr_base : c =  nbr_in_long = 4
ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c =  nbr_in_long = 2

2a:ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 42
ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 16 base = 0123456789abcdef nbr_in_long = 42
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c =  nbr_in_long = 2
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 10
ft_putnbr_base : c1 =  nbr_in_long = 10
ft_putnbr_base : c =  nbr_in_long = 10

-2a:ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = -42
-ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 16 base = 0123456789abcdef nbr_in_long = 42
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c =  nbr_in_long = 2
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 10
ft_putnbr_base : c1 =  nbr_in_long = 10
ft_putnbr_base : c =  nbr_in_long = 10

:ft_error_or_strlen : 0

:ft_error_or_strlen : 1

:ft_error_or_strlen : 18
ft_error_or_correct_base : malloc size = 72
ft_error_or_correct_base : numbers_for_base = 

:% 
e3r11p9% cat ft_putnbr_base.c                                                                 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 15:47:47 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <stddef.h>
#include <limits.h>
#include <unistd.h>
#include <stdio.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	printf("ft_error_or_strlen : %d\n", result); 
	return (result);
}

int	ft_checked_into_base(int *base_into_numbers, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (base_into_numbers && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && base_into_numbers[i])
		{
			if (c == base_into_numbers[i])
				return (0);
			i++;
		}
		result = i == base_len;
		printf("ft_checked_into_base : base_len = %d i = %d result = %d\n", base_len, i, result); 
	}
	return (result);
}

int	ft_error_or_correct_base(int *numbers_for_base, const char *str
		, int base_len)
{
	int	i;

	printf("ft_error_or_correct_base : malloc size = %ld\n", base_len * sizeof(int)); 
	numbers_for_base = (int *) malloc(base_len * sizeof(int));
	printf("ft_error_or_correct_base : numbers_for_base = %ls\n", numbers_for_base); 
	if (numbers_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(numbers_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				numbers_for_base[i] = str[i];
				printf("ft_error_or_correct_base : i = %d c = %c\n", i, numbers_for_base[i]); 
				i++;
			}
		}
		printf("ft_error_or_correct_base : base_len = %d i = %d str = %s\n", base_len, i, str); 
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(int *numbers_for_base, const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(numbers_for_base, str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		*numbers_for_base;
	int		test[16] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
	int		base_len;
	long	nbr_in_long;

	//numbers_for_base = NULL;
	numbers_for_base = test;
	base_len = ft_error_or_base(numbers_for_base, base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			printf("ft_putnbr_base : nbr_in_long = %ld\n", nbr_in_long); 
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			printf("ft_putnbr_base : c1 = %c nbr_in_long = %ld\n", numbers_for_base[1], nbr_in_long); 
			if (nbr_in_long < base_len)
			{
				printf("ft_putnbr_base : c = %c nbr_in_long = %ld\n", numbers_for_base[nbr_in_long], nbr_in_long); 
				write(1, &numbers_for_base[nbr_in_long], 1);
			}
			else
			{
				printf("ft_putnbr_base : base_len = %d base = %s nbr_in_long = %ld\n", base_len, base, nbr_in_long); 
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                  
42:ft_putnbr_base : nbr = 42 base = 0123456789
ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 10
ft_error_or_correct_base : characters_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 42
ft_putnbr_base : c1 = 1 nbr_in_long = 42
ft_putnbr_base : base_len = 10 base = 0123456789 nbr_in_long = 42
ft_putnbr_base : nbr = 4 base = 0123456789
ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 10
ft_error_or_correct_base : characters_for_base = �6�c
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 4
ft_putnbr_base : c1 = 1 nbr_in_long = 4
ft_putnbr_base : c = 4 nbr_in_long = 4
4ft_putnbr_base : nbr = 2 base = 0123456789
ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 10
ft_error_or_correct_base : characters_for_base = �6�c
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 = 1 nbr_in_long = 2
ft_putnbr_base : c = 2 nbr_in_long = 2
2
2a:ft_putnbr_base : nbr = 42 base = 0123456789abcdef
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 16
ft_error_or_correct_base : characters_for_base = �6�c
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 42
ft_putnbr_base : c1 = 1 nbr_in_long = 42
ft_putnbr_base : base_len = 16 base = 0123456789abcdef nbr_in_long = 42
ft_putnbr_base : nbr = 2 base = 0123456789abcdef
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 16
ft_error_or_correct_base : characters_for_base = �6�c
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 = 1 nbr_in_long = 2
ft_putnbr_base : c = 2 nbr_in_long = 2
2ft_putnbr_base : nbr = 10 base = 0123456789abcdef
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 16
ft_error_or_correct_base : characters_for_base = �6�c
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 10
ft_putnbr_base : c1 = 1 nbr_in_long = 10
ft_putnbr_base : c = a nbr_in_long = 10
a
-2a:ft_putnbr_base : nbr = -42 base = 0123456789abcdef
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 16
ft_error_or_correct_base : characters_for_base = �6�c
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = -42
-ft_putnbr_base : c1 = 1 nbr_in_long = 42
ft_putnbr_base : base_len = 16 base = 0123456789abcdef nbr_in_long = 42
ft_putnbr_base : nbr = 2 base = 0123456789abcdef
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 16
ft_error_or_correct_base : characters_for_base = �6�c
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 = 1 nbr_in_long = 2
ft_putnbr_base : c = 2 nbr_in_long = 2
2ft_putnbr_base : nbr = 10 base = 0123456789abcdef
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 16
ft_error_or_correct_base : characters_for_base = �6�c
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 10
ft_putnbr_base : c1 = 1 nbr_in_long = 10
ft_putnbr_base : c = a nbr_in_long = 10
a
:ft_putnbr_base : nbr = 42 base = 
ft_error_or_strlen : 0

:ft_putnbr_base : nbr = 42 base = 0
ft_error_or_strlen : 1

:ft_putnbr_base : nbr = 42 base = +-0123456789abcdef
ft_error_or_strlen : 18
ft_error_or_correct_base : malloc size = 18
ft_error_or_correct_base : characters_for_base = �6�c

:ft_putnbr_base : nbr = 42 base = 	0123456789abcdef
e3r11p9% cat ft_putnbr_base.c                                                                 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 16:13:12 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <stddef.h>
#include <limits.h>
#include <unistd.h>
#include <stdio.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	printf("ft_error_or_strlen : %d\n", result); 
	return (result);
}

int	ft_checked_into_base(char *characters_for_base, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (characters_for_base && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && characters_for_base[i])
		{
			if (c == characters_for_base[i])
				return (0);
			i++;
		}
		result = i == base_len;
		printf("ft_checked_into_base : base_len = %d i = %d result = %d\n", base_len, i, result); 
	}
	return (result);
}

int	ft_error_or_correct_base(const char *str, int base_len)
{
	int	i;

	printf("ft_error_or_correct_base : malloc size = %ld\n", base_len * sizeof(char)); 
	char *characters_for_base = (char *) malloc(base_len * sizeof(char));
	printf("ft_error_or_correct_base : characters_for_base = %s\n", characters_for_base); 
	if (characters_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(characters_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				characters_for_base[i] = str[i];
				printf("ft_error_or_correct_base : i = %d c = %c\n", i, characters_for_base[i]); 
				i++;
			}
		}
		printf("ft_error_or_correct_base : base_len = %d i = %d str = %s\n", base_len, i, str); 
		free(characters_for_base);
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int	base_len;
	long	nbr_in_long;

	printf("ft_putnbr_base : nbr = %d base = %s\n", nbr, base); 
	base_len = ft_error_or_base(base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			printf("ft_putnbr_base : nbr_in_long = %ld\n", nbr_in_long); 
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			printf("ft_putnbr_base : c1 = %c nbr_in_long = %ld\n", base[1], nbr_in_long); 
			if (nbr_in_long < base_len)
			{
				printf("ft_putnbr_base : c = %c nbr_in_long = %ld\n", base[nbr_in_long], nbr_in_long); 
				write(1, &base[nbr_in_long], 1);
			}
			else
			{
				printf("ft_putnbr_base : base_len = %d base = %s nbr_in_long = %ld\n", base_len, base, nbr_in_long); 
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                  
42:42
2a:2a
-2a:-2a
:
:
:
:% 
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c                              
ft_putnbr_base.c: Error!
Error: VAR_DECL_START_FUNC  (line:  61, col:   1):	Variable declaration not at start of function
Error: SPACE_REPLACE_TAB    (line:  61, col:   9):	Found space when expecting tab
Error: MISALIGNED_VAR_DECL  (line:  61, col:  10):	Misaligned variable declaration
Error: DECL_ASSIGN_LINE     (line:  61, col:  31):	Declaration and assignation on a single line
Error: MISALIGNED_VAR_DECL  (line:  97, col:  13):	Misaligned variable declaration
e3r11p9% 
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: Error!
Error: MIXED_SPACE_TAB      (line:  60, col:   9):	Mixed spaces and tabs
Error: SPACE_REPLACE_TAB    (line:  60, col:   9):	Found space when expecting tab
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: Error!
Error: MISALIGNED_VAR_DECL  (line:  60, col:  13):	Misaligned variable declaration
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: OK!
e3r11p9% cat ft_putnbr_base.c                                   
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 16:23:05 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <stddef.h>
#include <limits.h>
#include <unistd.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	return (result);
}

int	ft_checked_into_base(char *characters_for_base, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (characters_for_base && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && characters_for_base[i])
		{
			if (c == characters_for_base[i])
				return (0);
			i++;
		}
		result = i == base_len;
	}
	return (result);
}

int	ft_error_or_correct_base(const char *str, int base_len)
{
	int		i;
	char	*characters_for_base;

	characters_for_base = (char *) malloc(base_len * sizeof(char));
	if (characters_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(characters_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				characters_for_base[i] = str[i];
				i++;
			}
		}
		free(characters_for_base);
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		base_len;
	long	nbr_in_long;

	base_len = ft_error_or_base(base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			if (nbr_in_long < base_len)
			{
				write(1, &base[nbr_in_long], 1);
			}
			else
			{
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_putnbr_base.c
test_ft_putnbr_base.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 16:23 .
drwxr-xr-x 8 hauerbac 2023_paris  4096 Feb 20 10:12 ..
-rw-r--r-- 1 hauerbac 2023_paris  2848 Feb 20 16:23 ft_putnbr_base.c
-rwxr-xr-x 1 hauerbac 2023_paris 16304 Feb 20 16:23 test_ft_putnbr_base
-rw-r--r-- 1 hauerbac 2023_paris  1382 Feb 20 14:48 test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base 
42:42
2a:2a
-2a:-2a
:
:
:
:%                                                                                                
% vi test_ft_putnbr_base.c                                 
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                 
42 en base 10:42
2a == 42 en base 16:2a
-2a == -42 en base 16:-2a
 (42 en base vide):
 (42 en base de taille 1):
 (42 en base 16 avec + et -):
 %                                                                                                e3r11p9% vi test_ft_putnbr_base.c                                                               
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
test_ft_putnbr_base.c: In function ‘main’:
test_ft_putnbr_base.c:22:44: error: stray ‘\’ in program
   22 |  write(1, "\n2a == 42 en base 16:", strlen(\n2a == 42 en base 16:"));
      |                                            ^
test_ft_putnbr_base.c:22:45: error: ‘n2a’ undeclared (first use in this function)
   22 |  write(1, "\n2a == 42 en base 16:", strlen(\n2a == 42 en base 16:"));
      |                                             ^~~
test_ft_putnbr_base.c:22:45: note: each undeclared identifier is reported only once for each function it appears in
test_ft_putnbr_base.c:22:54: error: expected ‘)’ before ‘en’
   22 |  write(1, "\n2a == 42 en base 16:", strlen(\n2a == 42 en base 16:"));
      |                                                      ^~~
      |                                                      )
test_ft_putnbr_base.c:22:66: error: missing terminating " character [-Werror]
   22 |  write(1, "\n2a == 42 en base 16:", strlen(\n2a == 42 en base 16:"));
      |                                                                  ^
test_ft_putnbr_base.c:22:66: error: missing terminating " character
   22 |  write(1, "\n2a == 42 en base 16:", strlen(\n2a == 42 en base 16:"));
      |                                                                  ^~~~
test_ft_putnbr_base.c:33:43: error: expected ‘)’ before ‘}’ token
   33 |  ft_putnbr_base(42, "\t0123456789abcdef");
      |                                           ^
      |                                           )
   34 | }
      | ~                                          
test_ft_putnbr_base.c:33:43: error: expected ‘;’ before ‘}’ token
   33 |  ft_putnbr_base(42, "\t0123456789abcdef");
      |                                           ^
      |                                           ;
   34 | }
      | ~                                          
cc1: all warnings being treated as errors
e3r11p9% vi test_ft_putnbr_base.c                                                               
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                 
42 en base 10:42
2a == 42 en base 16:2a
-2a == -42 en base 16:-2a
 (42 en base vide):
 (42 en base de taille 1):
 (42 en base 16 avec + et -):
 (42 en base 16 avec une tabulation):
10110 == 42 en base 2:101010
vn == 42 en base 8 ("poneyvif"):vn%                                                               e3r11p9% vi test_ft_putnbr_base.c                                                               
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_putnbr_base.c                         
test_ft_putnbr_base.c: Error!
Error: LINE_TOO_LONG        (line:  28, col:  82):	line too long
Error: LINE_TOO_LONG        (line:  30, col:  87):	line too long
Error: LINE_TOO_LONG        (line:  32, col: 103):	line too long
Error: LINE_TOO_LONG        (line:  36, col:  93):	line too long
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 16:50 .
drwxr-xr-x 8 hauerbac 2023_paris  4096 Feb 20 10:12 ..
-rw-r--r-- 1 hauerbac 2023_paris  2848 Feb 20 16:23 ft_putnbr_base.c
-rwxr-xr-x 1 hauerbac 2023_paris 16304 Feb 20 16:50 test_ft_putnbr_base
-rw-r--r-- 1 hauerbac 2023_paris  2033 Feb 20 16:49 test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base 
42 en base 10:42
2a == 42 en base 16:2a
-2a == -42 en base 16:-2a
 (42 en base vide):
 (42 en base de taille 1):
 (42 en base 16 avec + et -):
 (42 en base 16 avec une tabulation):
101010 == 42 en base 2:101010
vn == 42 en base 8 ("poneyvif"):vn%                                                               e3r11p9% cd ..
e3r11p9% cp ex04/ft_putnbr_base.c git_c_04/ex04/ft_putnbr_base.c
e3r11p9% cat ex04/ft_putnbr_base.c
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 16:23:05 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <stddef.h>
#include <limits.h>
#include <unistd.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	return (result);
}

int	ft_checked_into_base(char *characters_for_base, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (characters_for_base && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && characters_for_base[i])
		{
			if (c == characters_for_base[i])
				return (0);
			i++;
		}
		result = i == base_len;
	}
	return (result);
}

int	ft_error_or_correct_base(const char *str, int base_len)
{
	int		i;
	char	*characters_for_base;

	characters_for_base = (char *) malloc(base_len * sizeof(char));
	if (characters_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(characters_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				characters_for_base[i] = str[i];
				i++;
			}
		}
		free(characters_for_base);
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		base_len;
	long	nbr_in_long;

	base_len = ft_error_or_base(base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			if (nbr_in_long < base_len)
			{
				write(1, &base[nbr_in_long], 1);
			}
			else
			{
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% norminette git_c_04/ex04/ft_putnbr_base.c
git_c_04/ex04/ft_putnbr_base.c: OK!
e3r11p9% cd git_c_04 
e3r11p9% git add ex04/ft_putnbr_base.c
e3r11p9% git commit -m "Addition of ex04 file"
[master 6dd707d] Addition of ex04 file
 Committer: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 122 insertions(+)
 create mode 100644 ex04/ft_putnbr_base.c
e3r11p9% git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 1.10 KiB | 1.10 MiB/s, done.
Total 4 (delta 1), reused 0 (delta 0), pack-reused 0
remote: . Processing 1 references
remote: Processed 1 references in total
To vogsphere.42paris.fr:vogsphere/intra-uuid-d4eec565-5aac-454b-bfc9-f23dd065ac43-4702036-hauerbac
   e1c25dd..6dd707d  master -> master
e3r11p9% cd ..
e3r11p9% pwd
/mnt/nfs/homes/hauerbac/c_04
e3r11p9% mkdir ex05
e3r11p9% mkdir git_c_04/ex05
e3r11p9% cd ex05
--------------------------------------------------------------------------------------------------------------------------
Evaluated by mhoyer an hour ago
70%
tout est super et tres bien explique. Juste dommage lutilisation de malloc dans lex04. Le meilleur c04 que jai corriger depuis le debut. Bon courage glhf
Your feedback, 38 minutes ago :
Correcteur tres gentil, qui a lu mon code dans les moindres details et qui s'est donc apercu que j'avais utilise malloc quelques jours trop tot. Merci pour tes remarques :-) 

--------------------------------------------------------------------------------------------------------------------------
e3r11p9% pwd 
/mnt/nfs/homes/hauerbac
e3r11p9% cd c_04
e3r11p9% ls
ex00  ex01  ex02  ex03	ex04  ex05  git_c_04
e3r11p9% ls -aR git_c_04 
git_c_04:
.  ..  ex00  ex01  ex02  ex03  ex04  ex05  .git

git_c_04/ex00:
.  ..  ft_strlen.c

git_c_04/ex01:
.  ..  ft_putstr.c

git_c_04/ex02:
.  ..  ft_putnbr.c

git_c_04/ex03:
.  ..  ft_atoi.c

git_c_04/ex04:
.  ..  ft_putnbr_base.c

git_c_04/ex05:
.  ..

git_c_04/.git:
.  ..  branches  COMMIT_EDITMSG  config  description  HEAD  hooks  index  info	logs  objects  refs

git_c_04/.git/branches:
.  ..

git_c_04/.git/hooks:
.		       fsmonitor-watchman.sample  pre-merge-commit.sample    pre-receive.sample
..		       post-update.sample	  prepare-commit-msg.sample  push-to-checkout.sample
applypatch-msg.sample  pre-applypatch.sample	  pre-push.sample	     update.sample
commit-msg.sample      pre-commit.sample	  pre-rebase.sample

git_c_04/.git/info:
.  ..  exclude

git_c_04/.git/logs:
.  ..  HEAD  refs

git_c_04/.git/logs/refs:
.  ..  heads  remotes

git_c_04/.git/logs/refs/heads:
.  ..  master

git_c_04/.git/logs/refs/remotes:
.  ..  origin

git_c_04/.git/logs/refs/remotes/origin:
.  ..  master

git_c_04/.git/objects:
.   01	14  27	32  57	66  89	bd  bf	ce  e1	f2    pack
..  0f	1f  2a	34  5f	6d  8c	be  c8	da  e8	info

git_c_04/.git/objects/01:
.  ..  ec02880ad6675ccd5d50765208c6633aa88fb0

git_c_04/.git/objects/0f:
.  ..  81794c018d3bf628e9fa2718328b2e56754091

git_c_04/.git/objects/14:
.  ..  799e5bfd41727a711145c4dadc794dcc773ffb

git_c_04/.git/objects/1f:
.  ..  22e1efeccbfc99baca5765bc335af970bfed56

git_c_04/.git/objects/27:
.  ..  893828e30a5531c9d8cbec9148b6fafbcbcb59

git_c_04/.git/objects/2a:
.  ..  7315c474d7de65a1404feaed0c72ac11d7b70d  8583225cd51a19456650eeccd7586e4e962c5d

git_c_04/.git/objects/32:
.  ..  e02a3f93daa301b160b738c8fc4792d9cb3f54

git_c_04/.git/objects/34:
.  ..  14c60c3c8daf58ce5fbbe262d8fdbaf4cb092b

git_c_04/.git/objects/57:
.  ..  f557f8e8dd1f4efebf913bd8d0ee14d0775587

git_c_04/.git/objects/5f:
.  ..  fc6fa705a9ebf459e9ffe8a77569a7a5e4b265

git_c_04/.git/objects/66:
.  ..  2101a42365547380bd3f2750385df8c2c8c0cc

git_c_04/.git/objects/6d:
.  ..  d707d6d477124ca3b7f8c0803d3c17dfde0b3b

git_c_04/.git/objects/89:
.  ..  98a821c841421d295279d659ea4dc28bc10278

git_c_04/.git/objects/8c:
.  ..  e82cc482b5b0b802dd420f2f9fb89b6f4a5eb3

git_c_04/.git/objects/bd:
.  ..  5520e267d9f589e455eef58f00ba9c706fb4e9

git_c_04/.git/objects/be:
.  ..  03491a8dcc1877dc8f13af1a83bcd599161212

git_c_04/.git/objects/bf:
.  ..  c77787d80dce4be345807e23abc1b7a0434779

git_c_04/.git/objects/c8:
.  ..  64319085b2395eaa59087f1d51c3bf923efa48

git_c_04/.git/objects/ce:
.  ..  1022455e01b59ad4b6e306cdf93d9a02e7c40a

git_c_04/.git/objects/da:
.  ..  2d096ddbb60097881cafefebe02bfa409e7f82

git_c_04/.git/objects/e1:
.  ..  c25dd483d385110b09d262bf55ebf6d45bede2

git_c_04/.git/objects/e8:
.  ..  1eb9b04a329262f46fda1f3e63e69676d76f5f

git_c_04/.git/objects/f2:
.  ..  53524d685a858acde2277e6c6543306ffabc9a

git_c_04/.git/objects/info:
.  ..

git_c_04/.git/objects/pack:
.  ..

git_c_04/.git/refs:
.  ..  heads  remotes  tags

git_c_04/.git/refs/heads:
.  ..  master

git_c_04/.git/refs/remotes:
.  ..  origin

git_c_04/.git/refs/remotes/origin:
.  ..  master

git_c_04/.git/refs/tags:
.  ..
e3r11p9% ls -alR git_c_04/ex*
git_c_04/ex00:
total 12
drwxr-xr-x 2 hauerbac 2023_paris 4096 Feb 18 19:20 .
drwxr-xr-x 9 hauerbac 2023_paris 4096 Feb 20 16:58 ..
-rw-r--r-- 1 hauerbac 2023_paris  995 Feb 18 19:20 ft_strlen.c

git_c_04/ex01:
total 12
drwxr-xr-x 2 hauerbac 2023_paris 4096 Feb 18 19:28 .
drwxr-xr-x 9 hauerbac 2023_paris 4096 Feb 20 16:58 ..
-rw-r--r-- 1 hauerbac 2023_paris 1028 Feb 18 19:28 ft_putstr.c

git_c_04/ex02:
total 12
drwxr-xr-x 2 hauerbac 2023_paris 4096 Feb 18 19:38 .
drwxr-xr-x 9 hauerbac 2023_paris 4096 Feb 20 16:58 ..
-rw-r--r-- 1 hauerbac 2023_paris 1244 Feb 18 19:38 ft_putnbr.c

git_c_04/ex03:
total 12
drwxr-xr-x 2 hauerbac 2023_paris 4096 Feb 20 09:16 .
drwxr-xr-x 9 hauerbac 2023_paris 4096 Feb 20 16:58 ..
-rw-r--r-- 1 hauerbac 2023_paris 2542 Feb 20 09:55 ft_atoi.c

git_c_04/ex04:
total 12
drwxr-xr-x 2 hauerbac 2023_paris 4096 Feb 20 16:51 .
drwxr-xr-x 9 hauerbac 2023_paris 4096 Feb 20 16:58 ..
-rw-r--r-- 1 hauerbac 2023_paris 2848 Feb 20 16:51 ft_putnbr_base.c

git_c_04/ex05:
total 8
drwxr-xr-x 2 hauerbac 2023_paris 4096 Feb 20 16:58 .
drwxr-xr-x 9 hauerbac 2023_paris 4096 Feb 20 16:58 ..
e3r11p9% ls -alR ex*
ex00:
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:31 .
drwxr-xr-x 9 hauerbac 2023_paris  4096 Feb 20 16:58 ..
-rw-r--r-- 1 hauerbac 2023_paris   995 Feb 18 19:07 ft_strlen.c
-rwxr-xr-x 1 hauerbac 2023_paris 16080 Feb 20 09:31 test_ft_strlen
-rw-r--r-- 1 hauerbac 2023_paris  1650 Feb 20 09:30 test_ft_strlen.c

ex01:
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:29 .
drwxr-xr-x 9 hauerbac 2023_paris  4096 Feb 20 16:58 ..
-rw-r--r-- 1 hauerbac 2023_paris  1028 Feb 18 19:24 ft_putstr.c
-rwxr-xr-x 1 hauerbac 2023_paris 16080 Feb 20 09:29 test_ft_putstr
-rw-r--r-- 1 hauerbac 2023_paris  1218 Feb 20 09:29 test_ft_putstr.c

ex02:
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 18 19:37 .
drwxr-xr-x 9 hauerbac 2023_paris  4096 Feb 20 16:58 ..
-rw-r--r-- 1 hauerbac 2023_paris  1244 Feb 18 19:36 ft_putnbr.c
-rwxr-xr-x 1 hauerbac 2023_paris 16080 Feb 18 19:37 test_ft_putnbr
-rw-r--r-- 1 hauerbac 2023_paris  1191 Feb 18 19:37 test_ft_putnbr.c

ex03:
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:52 .
drwxr-xr-x 9 hauerbac 2023_paris  4096 Feb 20 16:58 ..
-rw-r--r-- 1 hauerbac 2023_paris  2542 Feb 20 09:52 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 09:52 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1718 Feb 20 09:48 test_ft_atoi.c

ex04:
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 16:50 .
drwxr-xr-x 9 hauerbac 2023_paris  4096 Feb 20 16:58 ..
-rw-r--r-- 1 hauerbac 2023_paris  2848 Feb 20 16:23 ft_putnbr_base.c
-rwxr-xr-x 1 hauerbac 2023_paris 16304 Feb 20 16:50 test_ft_putnbr_base
-rw-r--r-- 1 hauerbac 2023_paris  2033 Feb 20 16:49 test_ft_putnbr_base.c

ex05:
total 8
drwxr-xr-x 2 hauerbac 2023_paris 4096 Feb 20 16:58 .
drwxr-xr-x 9 hauerbac 2023_paris 4096 Feb 20 16:58 ..
e3r11p9% cd git_c_04 
e3r11p9% git log
commit 6dd707d6d477124ca3b7f8c0803d3c17dfde0b3b (HEAD -> master, origin/master)
Author: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Date:   Mon Feb 20 16:53:04 2023 +0100

    Addition of ex04 file

commit e1c25dd483d385110b09d262bf55ebf6d45bede2
Author: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Date:   Mon Feb 20 09:57:37 2023 +0100

    Correction of ex03 file for cases where there are some other characters in front of spaces at the beginning of the string

commit 2a7315c474d7de65a1404feaed0c72ac11d7b70d
Author: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Date:   Mon Feb 20 09:16:30 2023 +0100

    Addition of ex03 file

commit f253524d685a858acde2277e6c6543306ffabc9a
Author: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Date:   Sat Feb 18 19:39:09 2023 +0100

    Addition of ex02 file

commit 01ec02880ad6675ccd5d50765208c6633aa88fb0
Author: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Date:   Sat Feb 18 19:29:25 2023 +0100

    Addition of ex01 file

commit 8998a821c841421d295279d659ea4dc28bc10278
Author: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Date:   Sat Feb 18 19:20:49 2023 +0100

    Addition of ex00 file
e3r11p9% git status
On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean
e3r11p9% cd ..
---------------------------------------------------------------------------------------------------------------------------------
Evaluated by mhoyer 3 hours ago
70%
tout est super et tres bien explique. Juste dommage lutilisation de malloc dans lex04. Le meilleur c04 que jai corriger depuis le debut. Bon courage glhf
Your feedback, 2 hours ago :
Correcteur tres gentil, qui a lu mon code dans les moindres details et qui s'est donc apercu que j'avais utilise malloc quelques jours trop tot. Merci pour tes remarques :-)
4 / 4 4 / 4 4 / 4 4 / 4
Evaluated by apiotrau an hour ago
70%
Super comprehension, tres bonne logique et bon code, correction tres agreable, merci beaucoup et bon courage!!
Your feedback, 15 minutes ago :
Correcteur tres gentil et tres consciencieux. Merci beaucoup pour les encouragements!
4 / 4 4 / 4 4 / 4 4 / 4

Evaluated by moulinette 14 minutes ago
-42%
ex00: OK | ex01: OK | ex02: OK | ex03: KO | ex04: Cheating | ex05: Nothing turned in

= ex03 =========================================================================
$> cc -Wextra -Wall -Werror ft_atoi.c main.c -o user_exe

= Test 1 ===================================================
$> ./ihjwrwaw8sgi2ii2snf06ajw
$> diff -U 3 user_output_test1 test1.output | cat -e
--- user_output_test1    2023-02-22 10:06:23.505375145 +0000$
+++ test1.output    2023-02-22 10:06:23.473375145 +0000$
@@ -22,22 +22,22 @@$
175074925$
-2147483648$
-2147483647$
-7$
-7$
+0$
+0$
1$
-4$
0$
-5$
-2$
-5$
-8$
-4$
+0$
+0$
+0$
+0$
+0$
+0$
9$
-1$
+0$
0$
6$
-5$
-3$
-1$
-2$
+0$
+0$
+0$
+0$
1$

Diff KO :(
Grade: 0
---------------------------------------------------------------------------------------------------------------------------------
e3r11p9% pwd
/mnt/nfs/homes/hauerbac/c_04
e3r11p9% cd ex04
e3r11p9% ls
ft_putnbr_base.c  test_ft_putnbr_base  test_ft_putnbr_base.c
e3r11p9% cp ft_putnbr_base.c ft_putnbr_base_0.c
e3r11p9% cp test_ft_putnbr_base test_ft_putnbr_base_0
e3r11p9% vi ft_putnbr_base.c
e3r11p9% cat ft_putnbr_base.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/22 09:03:17 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>
#include <unistd.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	return (result);
}

int	ft_checked_into_base(char *characters_for_base, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (characters_for_base && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && characters_for_base[i])
		{
			if (c == characters_for_base[i])
				return (0);
			i++;
		}
		result = i == base_len;
	}
	return (result);
}

int	ft_error_or_correct_base(const char *str, int base_len)
{
	int		i;
	char	*characters_for_base;

	if (str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(characters_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				characters_for_base[i] = str[i];
				characters_for_base[i + 1] = '\0';
				i++;
			}
		}
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		base_len;
	long	nbr_in_long;

	base_len = ft_error_or_base(base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			if (nbr_in_long < base_len)
			{
				write(1, &base[nbr_in_long], 1);
			}
			else
			{
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_error_or_correct_base’:
ft_putnbr_base.c:67:10: error: ‘characters_for_base’ may be used uninitialized in this function [-Werror=maybe-uninitialized]
   67 |      && !ft_checked_into_base(characters_for_base, str[i], i)))
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                     
e3r11p9% cat ft_putnbr_base.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/22 09:23:05 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>
#include <unistd.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = 0;
	if (str)
	{
		i = 0;
		while (str && str[i] != '\0')
		{
			if (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v')
				return (0);
			i++;
		}
		result = i;
	}
	return (result);
}

int	ft_error_or_correct_base(const char *str, int base_len)
{
	int		i;
	int		j;
	char	*charactrs_for_base;

	i = 0;
	while (i < base_len)
	{
		if (str[i] == '+' || str[i] == '-')
			return (0);
		else if (i > 0 && str[i])
		{
			j = 0;
			while (j < base_len && characters_for_base[j])
			{
				if (characters_for_base[j] == str[i])
					return (0);
				j++;
			}
		}
		characters_for_base[i] = str[i];
		characters_for_base[++i] = '\0';
	}
	if (i == base_len)
		return (base_len);
	return (0);
}

int	ft_error_or_base(const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		base_len;
	long	nbr_in_long;

	base_len = ft_error_or_base(base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			if (nbr_in_long < base_len)
			{
				write(1, &base[nbr_in_long], 1);
			}
			else
			{
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c        
ft_putnbr_base.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_error_or_correct_base’:
ft_putnbr_base.c:52:27: error: ‘characters_for_base’ undeclared (first use in this function); did you mean ‘charactrs_for_base’?
   52 |    while (j < base_len && characters_for_base[j])
      |                           ^~~~~~~~~~~~~~~~~~~
      |                           charactrs_for_base
ft_putnbr_base.c:52:27: note: each undeclared identifier is reported only once for each function it appears in
ft_putnbr_base.c:42:8: error: unused variable ‘charactrs_for_base’ [-Werror=unused-variable]
   42 |  char *charactrs_for_base;
      |        ^~~~~~~~~~~~~~~~~~
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                     
e3r11p9% cat ft_putnbr_base.c                                     
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/22 09:24:53 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>
#include <unistd.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = 0;
	if (str)
	{
		i = 0;
		while (str && str[i] != '\0')
		{
			if (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v')
				return (0);
			i++;
		}
		result = i;
	}
	return (result);
}

int	ft_error_or_correct_base(const char *str, int base_len)
{
	int		i;
	int		j;
	char	*characters_for_base;

	i = 0;
	while (i < base_len)
	{
		if (str[i] == '+' || str[i] == '-')
			return (0);
		else if (i > 0 && str[i])
		{
			j = 0;
			while (j < base_len && characters_for_base[j])
			{
				if (characters_for_base[j] == str[i])
					return (0);
				j++;
			}
		}
		characters_for_base[i] = str[i];
		characters_for_base[++i] = '\0';
	}
	if (i == base_len)
		return (base_len);
	return (0);
}

int	ft_error_or_base(const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		base_len;
	long	nbr_in_long;

	base_len = ft_error_or_base(base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			if (nbr_in_long < base_len)
			{
				write(1, &base[nbr_in_long], 1);
			}
			else
			{
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c        
ft_putnbr_base.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_error_or_correct_base’:
ft_putnbr_base.c:54:28: error: ‘characters_for_base’ may be used uninitialized in this function [-Werror=maybe-uninitialized]
   54 |     if (characters_for_base[j] == str[i])
      |                            ^
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                     
e3r11p9% cat ft_putnbr_base.c                                     
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/22 09:28:23 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>
#include <unistd.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = 0;
	if (str)
	{
		i = 0;
		while (str && str[i] != '\0')
		{
			if (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v')
				return (0);
			i++;
		}
		result = i;
	}
	return (result);
}

int	ft_error_or_correct_base(const char *str, int base_len)
{
	int	i;
	int	j;

	i = 0;
	while (i < base_len)
	{
		if (str[i] == '+' || str[i] == '-')
			return (0);
		else if (i > 0 && str[i])
		{
			j = 0;
			while (j < i && str[j])
			{
				if (str[j] == str[i])
					return (0);
				j++;
			}
		}
		i++;
	}
	if (i == base_len)
		return (base_len);
	return (0);
}

int	ft_error_or_base(const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		base_len;
	long	nbr_in_long;

	base_len = ft_error_or_base(base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			if (nbr_in_long < base_len)
			{
				write(1, &base[nbr_in_long], 1);
			}
			else
			{
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c        
ft_putnbr_base.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c
/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/10/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x1b): undefined reference to `main'
collect2: error: ld returned 1 exit status
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c 
e3r11p9% ls -al
total 52
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 22 09:28 .
drwxr-xr-x 9 hauerbac 2023_paris  4096 Feb 20 16:58 ..
-rw-r--r-- 1 hauerbac 2023_paris  2848 Feb 22 08:57 ft_putnbr_base_0.c
-rw-r--r-- 1 hauerbac 2023_paris  2297 Feb 22 09:28 ft_putnbr_base.c
-rwxr-xr-x 1 hauerbac 2023_paris 16168 Feb 22 09:28 test_ft_putnbr_base
-rwxr-xr-x 1 hauerbac 2023_paris 16304 Feb 22 08:57 test_ft_putnbr_base_0
-rw-r--r-- 1 hauerbac 2023_paris  2033 Feb 20 16:49 test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base
42 en base 10:42
2a == 42 en base 16:2a
-2a == -42 en base 16:-2a
 (42 en base vide):
 (42 en base de taille 1):
 (42 en base 16 avec + et -):
 (42 en base 16 avec une tabulation):
101010 == 42 en base 2:101010
vn == 42 en base 8 ("poneyvif"):vn%                                                                   
e3r11p9% pwd
/mnt/nfs/homes/hauerbac/c_04/ex04
e3r11p9% cd ../ex03
e3r11p9% ls
ft_atoi.c  test_ft_atoi  test_ft_atoi.c
e3r11p9% vi ft_atoi.c 
e3r11p9% cat ft_atoi.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/22 11:43:29 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = (unsigned int)i;
		i++;
		while (str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = (unsigned int)i++;
		if (boundaries[0] > boundaries[1])
			result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries, str);
	result = 0;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		result = str[i++] - 48;
		while (i <= boundaries[1])
			result = (result * 10) + (str[i++] - 48);
		result *= error_or_sign;
	}
	return (result);
}
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c                             
ft_atoi.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c                     
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 22 11:44 .
drwxr-xr-x 9 hauerbac 2023_paris  4096 Feb 20 16:58 ..
-rw-r--r-- 1 hauerbac 2023_paris  2129 Feb 22 11:43 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 22 11:44 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1718 Feb 20 09:48 test_ft_atoi.c
e3r11p9% ./test_ft_atoi                                   
We find the number -1234 into "    ---+--+1234ab567"
We find the number 0 into " cvedrf   ----+---+1234ab567"
We find the number 0 into "  sdfggf  -----+---+1234ab567"
42:42
-42:-42
0:0
zsh: segmentation fault (core dumped)  ./test_ft_atoi
e3r11p9% cat test_ft_atoi.c
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_atoi.c                                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:52:39 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:48:31 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdio.h>

int	ft_atoi(char *str);

int	main(void)
{
	char	str[] = "    ---+--+1234ab567";
	char	str1[] = " cvedrf   ----+---+1234ab567";
	char	str2[] = "  sdfggf  -----+---+1234ab567";

	printf("We find the number %d into \"%s\"\n", ft_atoi(str), str);
	printf("We find the number %d into \"%s\"\n", ft_atoi(str1), str1);
	printf("We find the number %d into \"%s\"\n", ft_atoi(str2), str2);
	printf("42:%d\n", ft_atoi("  \n  42t4457"));
	printf("-42:%d\n", ft_atoi(" --+-42sfs:f545"));
	printf("0:%d\n", ft_atoi("\0 1337"));
	printf("0:%d\n", ft_atoi("-0"));
	printf("0:%d\n", ft_atoi(" - 1 3 2 5 6 3 2 1 6 7"));
	printf("-1325632167:%d\n", ft_atoi("-1325632167"));
	printf("-100:%d\n", ft_atoi("-100"));
	printf("min:%d\n", ft_atoi("\t---+2147483648"));
	printf("max:%d\n", ft_atoi("\v2147483647"));
	return (0);
}
e3r11p9% vi ft_atoi.c                                     
e3r11p9% cat ft_atoi.c                                     
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/22 11:48:52 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = (unsigned int)i;
		while (str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = (unsigned int)i++;
		if (boundaries[0] > boundaries[1])
			result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries, str);
	result = 0;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		result = str[i++] - 48;
		while (i <= boundaries[1])
			result = (result * 10) + (str[i++] - 48);
		result *= error_or_sign;
	}
	return (result);
}
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c                
ft_atoi.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c
e3r11p9% ls -al                                         
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 22 11:49 .
drwxr-xr-x 9 hauerbac 2023_paris  4096 Feb 20 16:58 ..
-rw-r--r-- 1 hauerbac 2023_paris  2122 Feb 22 11:48 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 22 11:49 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1718 Feb 20 09:48 test_ft_atoi.c
e3r11p9% ./test_ft_atoi                                 
We find the number -1234 into "    ---+--+1234ab567"
We find the number 0 into " cvedrf   ----+---+1234ab567"
We find the number 0 into "  sdfggf  -----+---+1234ab567"
42:42
-42:-42
0:0
0:0
0:0
-1325632167:-1325632167
-100:-100
min:-2147483648
max:2147483647
---------------------------------------------------------------------------------------------------------
e3r11p9% pwd
/mnt/nfs/homes/hauerbac
e3r11p9% cd c_04
e3r11p9% ls
ex00  ex01  ex02  ex03	ex04  ex05  git_c_04
e3r11p9% git clone git@vogsphere.42paris.fr:vogsphere/intra-uuid-eff40e53-d2f1-4475-856d-1c9cd8636016-4713148-hauerbac git_c_04_2
Cloning into 'git_c_04_2'...
warning: You appear to have cloned an empty repository.
e3r11p9% ls -alR ex*
ex00:
total 32
drwxr-xr-x  2 hauerbac 2023_paris  4096 Feb 20 09:31 .
drwxr-xr-x 10 hauerbac 2023_paris  4096 Feb 22 15:46 ..
-rw-r--r--  1 hauerbac 2023_paris   995 Feb 18 19:07 ft_strlen.c
-rwxr-xr-x  1 hauerbac 2023_paris 16080 Feb 20 09:31 test_ft_strlen
-rw-r--r--  1 hauerbac 2023_paris  1650 Feb 20 09:30 test_ft_strlen.c

ex01:
total 32
drwxr-xr-x  2 hauerbac 2023_paris  4096 Feb 20 09:29 .
drwxr-xr-x 10 hauerbac 2023_paris  4096 Feb 22 15:46 ..
-rw-r--r--  1 hauerbac 2023_paris  1028 Feb 18 19:24 ft_putstr.c
-rwxr-xr-x  1 hauerbac 2023_paris 16080 Feb 20 09:29 test_ft_putstr
-rw-r--r--  1 hauerbac 2023_paris  1218 Feb 20 09:29 test_ft_putstr.c

ex02:
total 32
drwxr-xr-x  2 hauerbac 2023_paris  4096 Feb 18 19:37 .
drwxr-xr-x 10 hauerbac 2023_paris  4096 Feb 22 15:46 ..
-rw-r--r--  1 hauerbac 2023_paris  1244 Feb 18 19:36 ft_putnbr.c
-rwxr-xr-x  1 hauerbac 2023_paris 16080 Feb 18 19:37 test_ft_putnbr
-rw-r--r--  1 hauerbac 2023_paris  1191 Feb 18 19:37 test_ft_putnbr.c

ex03:
total 44
drwxr-xr-x  2 hauerbac 2023_paris  4096 Feb 22 13:41 .
drwxr-xr-x 10 hauerbac 2023_paris  4096 Feb 22 15:46 ..
-rw-r--r--  1 hauerbac 2023_paris  2122 Feb 22 11:48 ft_atoi.c
-rwxr-xr-x  1 hauerbac 2023_paris 16160 Feb 22 13:41 test_ft_atoi
-rw-r--r--  1 hauerbac 2023_paris  1761 Feb 22 13:41 test_ft_atoi.c
-rw-r--r--  1 hauerbac 2023_paris 12288 Feb 22 13:41 .test_ft_atoi.c.swp

ex04:
total 52
drwxr-xr-x  2 hauerbac 2023_paris  4096 Feb 22 09:28 .
drwxr-xr-x 10 hauerbac 2023_paris  4096 Feb 22 15:46 ..
-rw-r--r--  1 hauerbac 2023_paris  2848 Feb 22 08:57 ft_putnbr_base_0.c
-rw-r--r--  1 hauerbac 2023_paris  2297 Feb 22 09:28 ft_putnbr_base.c
-rwxr-xr-x  1 hauerbac 2023_paris 16168 Feb 22 09:28 test_ft_putnbr_base
-rwxr-xr-x  1 hauerbac 2023_paris 16304 Feb 22 08:57 test_ft_putnbr_base_0
-rw-r--r--  1 hauerbac 2023_paris  2033 Feb 20 16:49 test_ft_putnbr_base.c

ex05:
total 8
drwxr-xr-x  2 hauerbac 2023_paris 4096 Feb 20 16:58 .
drwxr-xr-x 10 hauerbac 2023_paris 4096 Feb 22 15:46 ..
e3r11p9% cp ex00/ft_strlen.c git_c_04_2/ex00/ft_strlen.c
cp: cannot create regular file 'git_c_04_2/ex00/ft_strlen.c': No such file or directory
e3r11p9% mkdir git_c_04_2/ex00      
e3r11p9% cp ex00/ft_strlen.c git_c_04_2/ex00/ft_strlen.c
e3r11p9% mkdir git_c_04_2/ex01                          
e3r11p9% cp ex01/ft_putstr.c git_c_04_2/ex01/ft_putstr.c
e3r11p9% mkdir git_c_04_2/ex02                          
e3r11p9% cp ex02/ft_putnbr.c git_c_04_2/ex02/ft_putnbr.c
e3r11p9% mkdir git_c_04_2/ex03                          
e3r11p9% cp ex03/ft_atoi.c git_c_04_2/ex03/ft_atoi.c
e3r11p9% mkdir git_c_04_2/ex04                      
e3r11p9% cp ex04/ft_putnbr_base.c git_c_04_2/ex04/ft_putnbr_base.c
e3r11p9% cd git_c_04_2
e3r11p9% git add ex00/ft_strlen.c
e3r11p9% git add ex01/ft_putstr.c
e3r11p9% git add ex02/ft_putnbr.c
e3r11p9% git add ex03/ft_atoi.c
e3r11p9% git add ex04/ft_putnbr_base.c
e3r11p9% git commit -m "Second retry for special cases into ft_atoi.c and not to use malloc into ft_putnbr_base.c"
[master (root-commit) 6e7427c] Second retry for special cases into ft_atoi.c and not to use malloc into ft_putnbr_base.c
 Committer: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 5 files changed, 263 insertions(+)
 create mode 100644 ex00/ft_strlen.c
 create mode 100644 ex01/ft_putstr.c
 create mode 100644 ex02/ft_putnbr.c
 create mode 100644 ex03/ft_atoi.c
 create mode 100644 ex04/ft_putnbr_base.c
e3r11p9% git push
Enumerating objects: 12, done.
Counting objects: 100% (12/12), done.
Delta compression using up to 4 threads
Compressing objects: 100% (7/7), done.
Writing objects: 100% (12/12), 2.36 KiB | 1.18 MiB/s, done.
Total 12 (delta 2), reused 0 (delta 0), pack-reused 0
remote: . Processing 1 references
remote: Processed 1 references in total
To vogsphere.42paris.fr:vogsphere/intra-uuid-eff40e53-d2f1-4475-856d-1c9cd8636016-4713148-hauerbac
 * [new branch]      master -> master
--------------------------------------------------------------------------------------------------------------------------------

Evaluated by moulinette 2 minutes ago
85%
ex00: OK | ex01: OK | ex02: OK | ex03: OK | ex04: OK | ex05: Nothing turned in
Peer evaluations (2/2)
Evaluated by bmoudach 2 hours ago
85%
tres bonne explication merci a toi pour le temps paae a m,expliauee et bon courage pour a suite.
Your feedback, an hour ago :
Correcteur tres gentil, qui fait des efforts pour comprendre mes explications. Merci beaucoup!
4 / 4 4 / 4 4 / 4 4 / 4
Evaluated by kboulkri 29 minutes ago
85%
Merci pour les explications sur la facon qui est differente de la mienne est ma apporter de nouvelles infos. bon courage pour la suite !
Your feedback, 2 minutes ago :
Correcteur tres gentil et qui s'est montre tres interesse par mon code. Merci beaucoup! :-)
4 / 4 4 / 4 4 / 4 4 / 4



