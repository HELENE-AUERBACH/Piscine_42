e3r11p9% pwd
/mnt/nfs/homes/hauerbac
e3r11p9% ls
c_00  c_02  Desktop    Downloads  Pictures  rush_00  sgoinfre  shell_01   Videos
c_01  c_03  Documents  Music	  Public    samed    shell_00  Templates
e3r11p9% mkdir c_04
e3r11p9% cd c_04
e3r11p9% mkdir ex00
e3r11p9% cd ex00 
e3r11p9% vi ft_strlen.c
e3r11p9% cat ft_strlen.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_strlen.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:07:36 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/18 19:07:41 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

int	ft_strlen(char *str)
{
	int	i;

	i = 0;
	while (str && str[i] != '\0')
	{
		i++;
	}
	return (i);
}
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_strlen.c 
ft_strlen.c: OK!
e3r11p9% cp ft_strlen.c test_ft_strlen.c 
e3r11p9% vi test_ft_strlen.c 
e3r11p9% cat test_ft_strlen.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_strlen.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:15:44 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/18 19:15:46 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdio.h>
#include <stddef.h>

int	ft_strlen(char *str);

int	main(void)
{
	printf("La taille d'une chaine \"NULL\" est :\t%d\n", ft_strlen(NULL));
	printf("La taille d'une chaine \"vide\" est :\t%d\n", ft_strlen(""));
	printf("La taille de la chaine \"Piscine de fevrier 2023\" est :\t%d\n", ft_strlen("Piscine de fevrier 2023"));
	return (0);
}
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_strlen.c 
test_ft_strlen.c: Error!
Error: LINE_TOO_LONG        (line:  22, col:  83):	line too long
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_strlen ft_strlen.c test_ft_strlen.c 
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 18 19:16 .
drwxr-xr-x 3 hauerbac 2023_paris  4096 Feb 18 18:39 ..
-rw-r--r-- 1 hauerbac 2023_paris   995 Feb 18 19:07 ft_strlen.c
-rwxr-xr-x 1 hauerbac 2023_paris 16032 Feb 18 19:16 test_ft_strlen
-rw-r--r-- 1 hauerbac 2023_paris  1248 Feb 18 19:15 test_ft_strlen.c
e3r11p9% ./test_ft_strlen 
La taille d'une chaine "NULL" est :	0
La taille d'une chaine "vide" est :	0
La taille de la chaine "Piscine de fevrier 2023" est :	23
e3r11p9% cd ..
e3r11p9% ls
ex00
e3r11p9% git clone git@vogsphere.42paris.fr:vogsphere/intra-uuid-d4eec565-5aac-454b-bfc9-f23dd065ac43-4702036-hauerbac git_c_04
Cloning into 'git_c_04'...
warning: You appear to have cloned an empty repository.
e3r11p9% ls
ex00  git_c_04
e3r11p9% mkdir git_c_04/ex00
e3r11p9% ls                   
ex00  git_c_04
e3r11p9% cp ex00/ft_strlen.c git_c_04/ex00/ft_strlen.c      
e3r11p9% cd git_c_04 
e3r11p9% git add ex00/ft_strlen.c
e3r11p9% git commit -m "Addition of ex00 file"
[master (root-commit) 8998a82] Addition of ex00 file
 Committer: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 23 insertions(+)
 create mode 100644 ex00/ft_strlen.c
e3r11p9% git push
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (4/4), 527 bytes | 527.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
remote: . Processing 1 references
remote: Processed 1 references in total
To vogsphere.42paris.fr:vogsphere/intra-uuid-d4eec565-5aac-454b-bfc9-f23dd065ac43-4702036-hauerbac
 * [new branch]      master -> master
e3r11p9% cd ..
e3r11p9% ls
ex00  git_c_04
e3r11p9% mkdir ex01
e3r11p9% mkdir git_c_04/ex01
e3r11p9% cd ex01
e3r11p9% vi ft_putstr.c
e3r11p9% cat ft_putstr.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putstr.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:24:14 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/18 19:24:17 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <unistd.h>

void	ft_putstr(char *str)
{
	int	i;

	i = 0;
	while (str && str[i] != '\0')
	{
		write(1, &str[i], 1);
		i++;
	}
}
e3r11p9% vi test_ft_putstr.c 
e3r11p9% cat test_ft_putstr.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_putstr.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:25:38 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/18 19:25:40 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stddef.h>

void	ft_putstr(char *str);

int	main(void)
{
	ft_putstr(NULL);
	ft_putstr("La chaine qui suit est vide.\n");
	ft_putstr("");
	ft_putstr(" ~\n  !@42\\'`\";:.,/?+-()*&^%$#=[]{}\vest trop\tbIZaRRE");
	return (0);
}
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putstr.c     
ft_putstr.c: OK!
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_putstr.c 
test_ft_putstr.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putstr ft_putstr.c test_ft_putstr.c 
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 18 19:26 .
drwxr-xr-x 5 hauerbac 2023_paris  4096 Feb 18 19:22 ..
-rw-r--r-- 1 hauerbac 2023_paris  1028 Feb 18 19:24 ft_putstr.c
-rwxr-xr-x 1 hauerbac 2023_paris 16032 Feb 18 19:26 test_ft_putstr
-rw-r--r-- 1 hauerbac 2023_paris  1125 Feb 18 19:25 test_ft_putstr.c
e3r11p9% ./test_ft_putstr 
La chaine qui suit est vide.
 ~
  !@42\'`";:.,/?+-()*&^%$#=[]{}
                               est trop	bIZaRRE%                                                                   e3r11p9% vi test_ft_putstr.c                                
e3r11p9% cat test_ft_putstr.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_putstr.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:25:38 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/18 19:27:55 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stddef.h>

void	ft_putstr(char *str);

int	main(void)
{
	ft_putstr(NULL);
	ft_putstr("La chaine qui suit est vide.\n");
	ft_putstr("");
	ft_putstr("\n");
	ft_putstr(" ~\n  !@42\\'`\";:.,/?+-()*&^%$#=[]{}\vest trop\tbIZaRRE");
	return (0);
}
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_putstr.c               
test_ft_putstr.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putstr ft_putstr.c test_ft_putstr.c
e3r11p9% ls -al                                                 
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 18 19:28 .
drwxr-xr-x 5 hauerbac 2023_paris  4096 Feb 18 19:22 ..
-rw-r--r-- 1 hauerbac 2023_paris  1028 Feb 18 19:24 ft_putstr.c
-rwxr-xr-x 1 hauerbac 2023_paris 16032 Feb 18 19:28 test_ft_putstr
-rw-r--r-- 1 hauerbac 2023_paris  1143 Feb 18 19:27 test_ft_putstr.c
e3r11p9% ./test_ft_putstr                                       
La chaine qui suit est vide.

 ~
  !@42\'`";:.,/?+-()*&^%$#=[]{}
                               est trop	bIZaRRE%                                                                   e3r11p9% cd ..
e3r11p9% ls
ex00  ex01  git_c_04
e3r11p9% cp ex01/ft_putstr.c git_c_04/ex01/ft_putstr.c
e3r11p9% cd git_c_04 
e3r11p9% git add ex01/ft_putstr.c
e3r11p9% git commit -m "Addition of ex01 file"
[master 01ec028] Addition of ex01 file
 Committer: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 25 insertions(+)
 create mode 100644 ex01/ft_putstr.c
e3r11p9% git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 607 bytes | 607.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
remote: . Processing 1 references
remote: Processed 1 references in total
To vogsphere.42paris.fr:vogsphere/intra-uuid-d4eec565-5aac-454b-bfc9-f23dd065ac43-4702036-hauerbac
   8998a82..01ec028  master -> master
e3r11p9% cd ..
e3r11p9% mkdir ex02
e3r11p9% mkdir git_c_04/ex02
e3r11p9% cd ex02
e3r11p9% vi ft_putnbr.c
e3r11p9% cat ft_putnbr.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:35:58 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/18 19:36:00 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <unistd.h>

void	ft_putnbr(int nb)
{
	long	nb_in_long;
	int		digit_to_char;

	nb_in_long = nb;
	if (nb_in_long < 0)
	{
		write(1, "-", 1);
		nb_in_long = nb_in_long * -1;
	}
	if (nb_in_long < 10)
	{
		digit_to_char = nb_in_long + '0';
		write(1, &digit_to_char, 1);
	}
	else
	{
		ft_putnbr(nb_in_long / 10);
		ft_putnbr(nb_in_long % 10);
	}
}
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr.c                    
ft_putnbr.c: OK!
e3r11p9% vi test_ft_putnbr.c 
e3r11p9% cat test_ft_putnbr.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_putnbr.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:37:17 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/18 19:37:19 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>
#include <unistd.h>

void	ft_putnbr(int nb);

int	main(void)
{
	ft_putnbr(INT_MIN);
	write(1, "\n", 1);
	ft_putnbr(INT_MAX);
	write(1, "\n", 1);
	ft_putnbr(-42);
	write(1, "\n", 1);
	ft_putnbr(0);
	write(1, "\n", 1);
	ft_putnbr(42);
	write(1, "\nFin Test\n", 10);
	return (0);
}
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_putnbr.c 
test_ft_putnbr.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr ft_putnbr.c test_ft_putnbr.c 
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 18 19:37 .
drwxr-xr-x 6 hauerbac 2023_paris  4096 Feb 18 19:30 ..
-rw-r--r-- 1 hauerbac 2023_paris  1244 Feb 18 19:36 ft_putnbr.c
-rwxr-xr-x 1 hauerbac 2023_paris 16080 Feb 18 19:37 test_ft_putnbr
-rw-r--r-- 1 hauerbac 2023_paris  1191 Feb 18 19:37 test_ft_putnbr.c
e3r11p9% ./test_ft_putnbr 
-2147483648
2147483647
-42
0
42
Fin Test
e3r11p9% cd ..
e3r11p9% cp ex02/ft_putnbr.c git_c_04/ex02/ft_putnbr.c
e3r11p9% cd git_c_04 
e3r11p9% git add ex02/ft_putnbr.c
e3r11p9% git commit -m "Addition of ex02 file"
[master f253524] Addition of ex02 file
 Committer: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 36 insertions(+)
 create mode 100644 ex02/ft_putnbr.c
e3r11p9% git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 687 bytes | 687.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
remote: . Processing 1 references
remote: Processed 1 references in total
To vogsphere.42paris.fr:vogsphere/intra-uuid-d4eec565-5aac-454b-bfc9-f23dd065ac43-4702036-hauerbac
   01ec028..f253524  master -> master
e3r11p9% git log
commit f253524d685a858acde2277e6c6543306ffabc9a (HEAD -> master, origin/master)
Author: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Date:   Sat Feb 18 19:39:09 2023 +0100

    Addition of ex02 file

commit 01ec02880ad6675ccd5d50765208c6633aa88fb0
Author: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Date:   Sat Feb 18 19:29:25 2023 +0100

    Addition of ex01 file

commit 8998a821c841421d295279d659ea4dc28bc10278
Author: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Date:   Sat Feb 18 19:20:49 2023 +0100

    Addition of ex00 file
------------------------------------------------------------------------------------------------------------
e3r11p9% pwd
/mnt/nfs/homes/hauerbac
e3r11p9% cd c_04
e3r11p9% ls
ex00  ex01  ex02  git_c_04
e3r11p9% mkdir ex03
e3r11p9% mkdir git_c_04/ex03 
e3r11p9% cd ex03
e3r11p9% vi ft_atoi.c
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c
ft_atoi.c: Error!
Error: SPC_AFTER_POINTER    (line:  15, col:  49):	space after pointer
Error: SPC_AFTER_POINTER    (line:  31, col:  61):	space after pointer
Error: TAB_INSTEAD_SPC      (line:  36, col:  11):	Found tab when expecting space
Error: SPC_BFR_OPERATOR     (line:  36, col:  13):	missing space before operator
Error: TOO_MANY_TAB         (line:  70, col:   1):	Extra tabs for indent level
Error: TOO_MANY_TAB         (line:  75, col:   1):	Extra tabs for indent level
e3r11p9% 
e3r11p9% vi ft_atoi.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c
ft_atoi.c: OK!
e3r11p9% cat ft_atoi.c                                   
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 08:47:59 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (i <= INT_MAX && str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = i;
		while (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = i++;
		if (boundaries[0] > INT_MAX || boundaries[1] > INT_MAX
			|| boundaries[0] > boundaries[1])
				result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries[2], str);
	result = 1;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		result = error_or_sign * (str[i++] - 48);
		while (i <= boundaries[1])
			result = (result * 10) + (str[i++] - 48);
	}
	return (result);
}
e3r11p9% vi test_ft_atoi.c 
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_atoi.c 
test_ft_atoi.c: Error!
Error: DECL_ASSIGN_LINE     (line:  19, col:  19):	Declaration and assignation on a single line
Error: NL_AFTER_VAR_DECL    (line:  20, col:   1):	Variable declarations must be followed by a newline
e3r11p9% vi test_ft_atoi.c                                  
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_atoi.c
test_ft_atoi.c: Error!
Error: DECL_ASSIGN_LINE     (line:  19, col:  19):	Declaration and assignation on a single line
e3r11p9% cat test_ft_atoi.c                                   
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_atoi.c                                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:52:39 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 08:53:11 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdio.h>

int	ft_atoi(char *str);

int	main(void)
{
	char	str[] = " ---+--+1234ab567";

	printf("We find the number %d into \"%s\"\n", ft_atoi(str), str);
	return (0);
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c 
ft_atoi.c: In function ‘ft_atoi’:
ft_atoi.c:67:45: error: passing argument 1 of ‘ft_error_or_sign’ makes pointer from integer without a cast [-Werror=int-conversion]
   67 |  error_or_sign = ft_error_or_sign(boundaries[2], str);
      |                                   ~~~~~~~~~~^~~
      |                                             |
      |                                             unsigned int
ft_atoi.c:31:35: note: expected ‘unsigned int *’ but argument is of type ‘unsigned int’
   31 | int ft_error_or_sign(unsigned int boundaries[2], const char *str)
      |                      ~~~~~~~~~~~~~^~~~~~~~~~~~~
cc1: all warnings being treated as errors
e3r11p9% vi ft_atoi.c                                      
e3r11p9% vi ft_atoi.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c 
ft_atoi.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c
e3r11p9% cat ft_atoi.c                                      
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 08:57:55 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (i <= INT_MAX && str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = (unsigned int)i;
		while (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = (unsigned int)i++;
		if (boundaries[0] > INT_MAX || boundaries[1] > INT_MAX
			|| boundaries[0] > boundaries[1])
				result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries, str);
	result = 1;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		result = error_or_sign * (str[i++] - 48);
		while (i <= boundaries[1])
			result = (result * 10) + (str[i++] - 48);
	}
	return (result);
}
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 08:58 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  2256 Feb 20 08:57 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 08:58 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1072 Feb 20 08:53 test_ft_atoi.c
e3r11p9% ./test_ft_atoi 
We find the number -766 into " ---+--+1234ab567"
e3r11p9% vi ft_atoi.c                                      
e3r11p9% cat ft_atoi.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:05:47 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>
#include <stdio.h>

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (i <= INT_MAX && str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = (unsigned int)i;
		while (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = (unsigned int)i++;
		if (boundaries[0] > INT_MAX || boundaries[1] > INT_MAX
			|| boundaries[0] > boundaries[1])
				result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries, str);
	result = 1;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		printf("%c %d i = %d\n", str[i], str[i] - 48, i);
		result = error_or_sign * (str[i++] - 48);
		while (i <= boundaries[1])
		{
			printf("%c %d i = %d\n", str[i], str[i] - 48, i);
			result = (result * 10) + (str[i++] - 48);
		}
	}
	return (result);
}
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c
ft_atoi.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c
e3r11p9% ls -al                                           
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:06 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  2388 Feb 20 09:05 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 09:06 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1072 Feb 20 08:53 test_ft_atoi.c
e3r11p9% ./test_ft_atoi                                   
1 1 i = 8
2 2 i = 9
3 3 i = 10
4 4 i = 11
We find the number -766 into " ---+--+1234ab567"
e3r11p9% vi ft_atoi.c                                     
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c
ft_atoi.c: OK!
e3r11p9% cat ft_atoi.c                                    
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:09:04 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>
#include <stdio.h>

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (i <= INT_MAX && str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = (unsigned int)i;
		while (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = (unsigned int)i++;
		if (boundaries[0] > INT_MAX || boundaries[1] > INT_MAX
			|| boundaries[0] > boundaries[1])
				result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries, str);
	result = 1;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		printf("%c %d i = %d\n", str[i], str[i] - 48, i);
		result = error_or_sign * (str[i++] - 48);
		printf("%d i = %d\n", result, i);
		while (i <= boundaries[1])
		{
			printf("%c %d i = %d\n", str[i], str[i] - 48, i);
			result = (result * 10) + (str[i++] - 48);
			printf("%d i = %d\n", result, i);
		}
	}
	return (result);
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c
e3r11p9% ls -al                                            
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:09 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  2461 Feb 20 09:09 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 09:09 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1072 Feb 20 08:53 test_ft_atoi.c
e3r11p9% ./test_ft_atoi                                    
1 1 i = 8
-1 i = 9
2 2 i = 9
-8 i = 10
3 3 i = 10
-77 i = 11
4 4 i = 11
-766 i = 12
We find the number -766 into " ---+--+1234ab567"
e3r11p9% vi ft_atoi.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c                
ft_atoi.c: OK!
e3r11p9% cat ft_atoi.c                                                     
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:12:30 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>
#include <stdio.h>

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (i <= INT_MAX && str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = (unsigned int)i;
		while (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = (unsigned int)i++;
		if (boundaries[0] > INT_MAX || boundaries[1] > INT_MAX
			|| boundaries[0] > boundaries[1])
				result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries, str);
	result = 0;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		printf("%c %d i = %d\n", str[i], str[i] - 48, i);
		result = str[i++] - 48;
		printf("%d i = %d\n", result, i);
		while (i <= boundaries[1])
		{
			printf("%c %d i = %d\n", str[i], str[i] - 48, i);
			result = (result * 10) + (str[i++] - 48);
			printf("%d i = %d\n", result, i);
		}
		result *= error_or_sign;
		printf("%d i = %d\n", result, i);
	}
	return (result);
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c
e3r11p9% ls -al                                            
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:12 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  2506 Feb 20 09:12 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 09:12 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1072 Feb 20 08:53 test_ft_atoi.c
e3r11p9% ./test_ft_atoi                                    
1 1 i = 8
1 i = 9
2 2 i = 9
12 i = 10
3 3 i = 10
123 i = 11
4 4 i = 11
1234 i = 12
-1234 i = 12
We find the number -1234 into " ---+--+1234ab567"
e3r11p9% vi ft_atoi.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c                
ft_atoi.c: OK!
e3r11p9% cat ft_atoi.c                                                     
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:13:53 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (i <= INT_MAX && str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = (unsigned int)i;
		while (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = (unsigned int)i++;
		if (boundaries[0] > INT_MAX || boundaries[1] > INT_MAX
			|| boundaries[0] > boundaries[1])
				result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries, str);
	result = 0;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		result = str[i++] - 48;
		while (i <= boundaries[1])
			result = (result * 10) + (str[i++] - 48);
		result *= error_or_sign;
	}
	return (result);
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c
e3r11p9% ls -al                                            
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:14 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  2265 Feb 20 09:13 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 09:14 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1072 Feb 20 08:53 test_ft_atoi.c
e3r11p9% ./test_ft_atoi                                    
We find the number -1234 into " ---+--+1234ab567"
e3r11p9% cd ..
e3r11p9% cp ex03/ft_atoi.c git_c_04/ex03/ft_atoi.c
e3r11p9% cd git_c_04 
e3r11p9% git add ex03/ft_atoi.c
e3r11p9% git commit -m "Addition of ex03 file"
[master 2a7315c] Addition of ex03 file
 Committer: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 80 insertions(+)
 create mode 100644 ex03/ft_atoi.c
e3r11p9% git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 930 bytes | 930.00 KiB/s, done.
Total 4 (delta 1), reused 0 (delta 0), pack-reused 0
remote: . Processing 1 references
remote: Processed 1 references in total
To vogsphere.42paris.fr:vogsphere/intra-uuid-d4eec565-5aac-454b-bfc9-f23dd065ac43-4702036-hauerbac
   f253524..2a7315c  master -> master
e3r11p9% cd ..
e3r11p9% cd ex03
e3r11p9% vi test_ft_atoi.c
e3r11p9% cat test_ft_atoi.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_atoi.c                                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:52:39 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:25:48 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdio.h>

int	ft_atoi(char *str);

int	main(void)
{
	char	str[] = " ---+--+1234ab567";

	printf("We find the number %d into \"%s\"\n", ft_atoi(str), str);
	printf("42:%d\n", ft_atoi("  \n  42t4457"));
	printf("-42:%d\n", ft_atoi(" --+-42sfs:f545"));
	printf("0:%d\n", ft_atoi("\0 1337"));
	printf("0:%d\n", ft_atoi("-0"));
	printf("0:%d\n", ft_atoi(" - 1 3 2 5 6 3 2 1 6 7"));
	printf("-1325632167:%d\n", ft_atoi("-1325632167"));
	printf("-100:%d\n", ft_atoi("-100"));
	printf("min:%d\n", ft_atoi("\t---+2147483648"));
	printf("max:%d\n", ft_atoi("\v2147483647"));
	return (0);
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:26 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  2265 Feb 20 09:13 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 09:26 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1482 Feb 20 09:25 test_ft_atoi.c
e3r11p9% ./test_ft_atoi 
We find the number -1234 into " ---+--+1234ab567"
42:42
-42:-42
0:0
0:0
0:0
-1325632167:-1325632167
-100:-100
min:-2147483648
max:2147483647
e3r11p9% cd ../ex02
e3r11p9% ls
ft_putnbr.c  test_ft_putnbr  test_ft_putnbr.c
e3r11p9% ./test_ft_putnbr   
-2147483648
2147483647
-42
0
42
Fin Test
e3r11p9% cd ../ex01
e3r11p9% ls
ft_putstr.c  test_ft_putstr  test_ft_putstr.c
e3r11p9% vi test_ft_putstr.c
e3r11p9% cat test_ft_putstr.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_putstr.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:25:38 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:29:13 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stddef.h>

void	ft_putstr(char *str);

int	main(void)
{
	ft_putstr(NULL);
	ft_putstr("La chaine qui suit est vide.\n");
	ft_putstr("");
	ft_putstr("\n");
	ft_putstr(" ~\n  !@42\\'`\";:.,/?+-()*&^%$#=[]{}\vest trop\tbIZaRRE");
	char s1[] = "Suc";
	char s2[] = "cess\n";
	ft_putstr(s1);
	ft_putstr(s2);
	return (0);
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putstr ft_putstr.c test_ft_putstr.c 
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:29 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  1028 Feb 18 19:24 ft_putstr.c
-rwxr-xr-x 1 hauerbac 2023_paris 16080 Feb 20 09:29 test_ft_putstr
-rw-r--r-- 1 hauerbac 2023_paris  1218 Feb 20 09:29 test_ft_putstr.c
e3r11p9% ./test_ft_putstr 
La chaine qui suit est vide.

 ~
  !@42\'`";:.,/?+-()*&^%$#=[]{}
                               est trop	bIZaRRESuccess
e3r11p9% cd ../ex00
e3r11p9% ls
ft_strlen.c  test_ft_strlen  test_ft_strlen.c
e3r11p9% vi test_ft_strlen.c
e3r11p9% cat test_ft_strlen.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_strlen.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/18 19:15:44 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:30:59 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdio.h>
#include <stddef.h>

int	ft_strlen(char *str);

int	main(void)
{
	printf("La taille d'une chaine \"NULL\" est :\t%d\n", ft_strlen(NULL));
	printf("La taille d'une chaine \"vide\" est :\t%d\n", ft_strlen(""));
	printf("La taille de la chaine \"Piscine de fevrier 2023\" est :\t%d\n", ft_strlen("Piscine de fevrier 2023"));
	char s1[] = "MyStr";
	char s2[] = "MyTest\nOfSuccess";
	char s3[] = "0123456789abcdef";
	char s4[] = "My\tStr";
	char s5[] = "";
	printf(ft_strlen(s1) == 5 ? "Success\n" : "Fail\n");
	printf(ft_strlen(s2) == 16 ? "Success\n" : "Fail\n");
	printf(ft_strlen(s3) == 16 ? "Success\n" : "Fail\n");
	printf(ft_strlen(s4) == 6 ? "Success\n" : "Fail\n");
	printf(ft_strlen(s5) == 0 ? "Success\n" : "Fail\n");
	return (0);
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_strlen ft_strlen.c test_ft_strlen.c 
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:31 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris   995 Feb 18 19:07 ft_strlen.c
-rwxr-xr-x 1 hauerbac 2023_paris 16080 Feb 20 09:31 test_ft_strlen
-rw-r--r-- 1 hauerbac 2023_paris  1650 Feb 20 09:30 test_ft_strlen.c
e3r11p9% ./test_ft_strlen 
La taille d'une chaine "NULL" est :	0
La taille d'une chaine "vide" est :	0
La taille de la chaine "Piscine de fevrier 2023" est :	23
Success
Success
Success
Success
Success
e3r11p9% cd ..
e3r11p9% pwd
/mnt/nfs/homes/hauerbac/c_04
e3r11p9% cd ex03         
e3r11p9% ls
ft_atoi.c  test_ft_atoi  test_ft_atoi.c
e3r11p9% vi ft_atoi.c 
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c                
ft_atoi.c: OK!
e3r11p9% cat ft_atoi.c                                   
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:44:48 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (i <= INT_MAX && str[i]
			&& str[i] != ' ' && str[i] != '\f'
			&& str[i] != '\n' && str[i] != '\r'
			&& str[i] != '\t' && str[i] != '\v'
			&& str[i] != '+' && str[i] != '-'
			&& !(str[i] >= 48 && str[i] <= 57))
			i++;
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (i <= INT_MAX && str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = (unsigned int)i;
		while (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = (unsigned int)i++;
		if (boundaries[0] > INT_MAX || boundaries[1] > INT_MAX
			|| boundaries[0] > boundaries[1])
				result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries, str);
	result = 0;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		result = str[i++] - 48;
		while (i <= boundaries[1])
			result = (result * 10) + (str[i++] - 48);
		result *= error_or_sign;
	}
	return (result);
}
e3r11p9% vi test_ft_atoi.c
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_atoi
Error: test_ft_atoi is not valid C or C header file
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_atoi.c
test_ft_atoi.c: Error!
Error: DECL_ASSIGN_LINE     (line:  19, col:  19):	Declaration and assignation on a single line
Error: DECL_ASSIGN_LINE     (line:  20, col:  20):	Declaration and assignation on a single line
Error: DECL_ASSIGN_LINE     (line:  21, col:  20):	Declaration and assignation on a single line
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c     
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:49 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  2497 Feb 20 09:44 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 09:49 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1718 Feb 20 09:48 test_ft_atoi.c
e3r11p9% ./test_ft_atoi 
We find the number -1234 into "    ---+--+1234ab567"
We find the number 0 into " cvedrf   ----+---+1234ab567"
We find the number 0 into "  sdfggf  -----+---+1234ab567"
42:42
-42:-42
0:0
0:0
0:0
-1325632167:-1325632167
-100:-100
min:-2147483648
max:2147483647
e3r11p9% vi ft_atoi.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_atoi.c
ft_atoi.c: OK!
e3r11p9% cat ft_atoi.c                                    
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:40:20 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:52:25 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <limits.h>

unsigned int	ft_spaces_truncating(const char *str)
{
	unsigned int	i;

	i = 0;
	if (str)
	{
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
		while (i <= INT_MAX && str[i]
			&& str[i] != '+' && str[i] != '-'
			&& !(str[i] >= 48 && str[i] <= 57))
			i++;
		while (i <= INT_MAX && str[i]
			&& (str[i] == ' ' || str[i] == '\f'
				|| str[i] == '\n' || str[i] == '\r'
				|| str[i] == '\t' || str[i] == '\v'))
			i++;
	}
	return (i);
}

int	ft_error_or_sign(unsigned int boundaries[2], const char *str)
{
	int				result;
	unsigned int	i;

	result = 0;
	boundaries[0] = -1;
	boundaries[1] = -2;
	if (str)
	{
		result = 1;
		i = ft_spaces_truncating(str);
		while (i <= INT_MAX && str[i] && (str[i] == '+' || str[i] == '-'))
		{
			if (str[i] == '-')
				result = -1 * result;
			i++;
		}
		if (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[0] = (unsigned int)i;
		while (i <= INT_MAX && str[i] && str[i] >= 48 && str[i] <= 57)
			boundaries[1] = (unsigned int)i++;
		if (boundaries[0] > INT_MAX || boundaries[1] > INT_MAX
			|| boundaries[0] > boundaries[1])
				result = 0;
	}
	return (result);
}

int	ft_atoi(char *str)
{
	unsigned int	boundaries[2];
	unsigned int	i;
	int				error_or_sign;
	int				result;

	error_or_sign = ft_error_or_sign(boundaries, str);
	result = 0;
	if (error_or_sign == 0)
		return (0);
	else
	{
		i = boundaries[0];
		result = str[i++] - 48;
		while (i <= boundaries[1])
			result = (result * 10) + (str[i++] - 48);
		result *= error_or_sign;
	}
	return (result);
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_atoi ft_atoi.c test_ft_atoi.c
e3r11p9% ls -al                                                            
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 09:52 .
drwxr-xr-x 7 hauerbac 2023_paris  4096 Feb 20 07:37 ..
-rw-r--r-- 1 hauerbac 2023_paris  2542 Feb 20 09:52 ft_atoi.c
-rwxr-xr-x 1 hauerbac 2023_paris 16160 Feb 20 09:52 test_ft_atoi
-rw-r--r-- 1 hauerbac 2023_paris  1718 Feb 20 09:48 test_ft_atoi.c
e3r11p9% ./test_ft_atoi                                    
We find the number -1234 into "    ---+--+1234ab567"
We find the number -1234 into " cvedrf   ----+---+1234ab567"
We find the number 1234 into "  sdfggf  -----+---+1234ab567"
42:42
-42:-42
0:0
0:0
0:0
-1325632167:-1325632167
-100:-100
min:-2147483648
max:2147483647
e3r11p9% cat test_ft_atoi.c 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   test_ft_atoi.c                                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 08:52:39 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 09:48:31 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdio.h>

int	ft_atoi(char *str);

int	main(void)
{
	char	str[] = "    ---+--+1234ab567";
	char	str1[] = " cvedrf   ----+---+1234ab567";
	char	str2[] = "  sdfggf  -----+---+1234ab567";

	printf("We find the number %d into \"%s\"\n", ft_atoi(str), str);
	printf("We find the number %d into \"%s\"\n", ft_atoi(str1), str1);
	printf("We find the number %d into \"%s\"\n", ft_atoi(str2), str2);
	printf("42:%d\n", ft_atoi("  \n  42t4457"));
	printf("-42:%d\n", ft_atoi(" --+-42sfs:f545"));
	printf("0:%d\n", ft_atoi("\0 1337"));
	printf("0:%d\n", ft_atoi("-0"));
	printf("0:%d\n", ft_atoi(" - 1 3 2 5 6 3 2 1 6 7"));
	printf("-1325632167:%d\n", ft_atoi("-1325632167"));
	printf("-100:%d\n", ft_atoi("-100"));
	printf("min:%d\n", ft_atoi("\t---+2147483648"));
	printf("max:%d\n", ft_atoi("\v2147483647"));
	return (0);
}
e3r11p9% cd ..
e3r11p9% cp ex03/ft_atoi.c git_c_04/ex03/ft_atoi.c                              
e3r11p9% git add ex03/ft_atoi.c
fatal: not a git repository (or any parent up to mount point /mnt)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
e3r11p9% cd git_c_04 
e3r11p9% git add ex03/ft_atoi.c
e3r11p9% git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	modified:   ex03/ft_atoi.c

e3r11p9% git commit -m "Correction of ex03 file for cases where there are some other characters in front of spaces at the beginning of the string"
[master e1c25dd] Correction of ex03 file for cases where there are some other characters in front of spaces at the beginning of the string
 Committer: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 10 insertions(+), 1 deletion(-)
e3r11p9% fit push
zsh: command not found: fit
e3r11p9% git push
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 474 bytes | 474.00 KiB/s, done.
Total 4 (delta 2), reused 0 (delta 0), pack-reused 0
remote: . Processing 1 references
remote: Processed 1 references in total
To vogsphere.42paris.fr:vogsphere/intra-uuid-d4eec565-5aac-454b-bfc9-f23dd065ac43-4702036-hauerbac
   2a7315c..e1c25dd  master -> master
e3r11p9% cd ..
e3r11p9% pwd
/mnt/nfs/homes/hauerbac/c_04
e3r11p9% mkdir ex04
e3r11p9% mkdir git_c_04/ex04
e3r11p9% cd ex04
e3r11p9% vi ft_putnbr_base.c
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c 
ft_putnbr_base.c: Error!
	Error: Unrecognized token line 136, col 55
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: Error!
Error: WRONG_SCOPE_COMMENT  (line:  76, col:  17):	Comment is invalid in this scope
Error: SPC_BEFORE_NL        (line:  77, col:  46):	Space before newline
Error: TERNARY_FBIDDEN      (line:  81, col:  31):	Ternaries are forbidden
Error: TOO_MANY_LINES       (line:  84, col:   1):	Function has more than 25 lines
Error: RETURN_PARENTHESIS   (line:  89, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line:  91, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line:  93, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line:  95, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line:  97, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line: 103, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line: 105, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line: 107, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line: 109, col:  16):	Return value must be in parenthesis
Error: RETURN_PARENTHESIS   (line: 111, col:  16):	Return value must be in parenthesis
Error: TOO_MANY_FUNCS       (line: 114, col:   1):	Too many functions in file
--------------------------------------------
return (i == base_len ? base_len : 0);
^I^I^I^I// i-nth position of char into base == value in base 10$
---------------------------------------------
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: Error!
Error: LINE_TOO_LONG        (line:  56, col:  82):	line too long
Error: TOO_MANY_FUNCS       (line: 106, col:   1):	Too many functions in file
Error: TOO_MANY_FUNCS       (line: 120, col:   1):	Too many functions in file
---------------------------------------------
int     int_power(int nb, int exponent)
{
        if (exponent == 0)
                return (1);
        else if (exponent == 1)
                return (nb);
        else if (nb == 0)
                return (0);
        else if (nb == 1)
                return (1);
        else
                return (nb * int_power(nb, exponent - 1));
}

int     int_power_in_base(int nb, int base_len, int exponent)
{
        if (exponent == 0)
                return (nb);
        else if (exponent == 1)
                return (nb * base_len);
        else if (nb == 0)
                return (0);
        else if (nb == 1)
                return (int_power(base_len, exponent));
        else
                return (base_len * int_power_in_base(nb, base_len, exponent - 1));
}
---------------------------------------------
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: Error!
Error: LINE_TOO_LONG        (line:  56, col:  82):	line too long
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: OK!
e3r11p9% cat ft_putnbr_base.c
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 14:42:06 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stddef.h>
#include <limits.h>
#include <unistd.h>

int	ft_error_or_strlen(char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	return (result);
}

int	ft_checked_into_base(int *base_into_numbers, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (base_into_numbers && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && base_into_numbers[i])
		{
			if (c == base_into_numbers[i])
				return (0);
			i++;
		}
		result = i == base_len;
	}
	return (result);
}

int	ft_error_or_correct_base(int *numbers_for_base, const char *str
		, int base_len)
{
	int	i;

	numbers_for_base = (int *) malloc(base_len * sizeof(int));
	if (numbers_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(numbers_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				numbers_for_base[i] = str[i];
				i++;
			}
		}
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(int *numbers_for_base, const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(numbers_for_base, str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		*numbers_for_base;
	int		base_len;
	long	nbr_in_long;

	base_len = ft_error_or_base(numbers_for_base, base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			if (nb_in_long < 0)
			{
				write(1, "-", 1);
				nb_in_long = nb_in_long * -1;
			}
			if (nb_in_long < base_len)
				write(1, &numbers_for_base[nb_in_long], 1);
			else
			{
				ft_putnbr_base(nb_in_long / base_len, base);
				ft_putnbr_base(nb_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% vi test_ft_putnbr_base.c
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_putnbr_base.c 
test_ft_putnbr_base.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c 
ft_putnbr_base.c: In function ‘ft_error_or_correct_base’:
ft_putnbr_base.c:61:29: error: implicit declaration of function ‘malloc’ [-Werror=implicit-function-declaration]
   61 |  numbers_for_base = (int *) malloc(base_len * sizeof(int));
      |                             ^~~~~~
ft_putnbr_base.c:61:29: error: incompatible implicit declaration of built-in function ‘malloc’ [-Werror]
ft_putnbr_base.c:16:1: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
   15 | #include <unistd.h>
  +++ |+#include <stdlib.h>
   16 | 
ft_putnbr_base.c: In function ‘ft_error_or_base’:
ft_putnbr_base.c:87:32: error: passing argument 1 of ‘ft_error_or_strlen’ discards ‘const’ qualifier from pointer target type [-Werror=discarded-qualifiers]
   87 |  base_len = ft_error_or_strlen(str);
      |                                ^~~
ft_putnbr_base.c:17:30: note: expected ‘char *’ but argument is of type ‘const char *’
   17 | int ft_error_or_strlen(char *str)
      |                        ~~~~~~^~~
ft_putnbr_base.c: In function ‘ft_putnbr_base’:
ft_putnbr_base.c:105:8: error: ‘nb_in_long’ undeclared (first use in this function); did you mean ‘nbr_in_long’?
  105 |    if (nb_in_long < 0)
      |        ^~~~~~~~~~
      |        nbr_in_long
ft_putnbr_base.c:105:8: note: each undeclared identifier is reported only once for each function it appears in
ft_putnbr_base.c:97:7: error: variable ‘nbr_in_long’ set but not used [-Werror=unused-but-set-variable]
   97 |  long nbr_in_long;
      |       ^~~~~~~~~~~
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c   
ft_putnbr_base.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_putnbr_base’:
ft_putnbr_base.c:101:14: error: ‘INT_MIN’ undeclared (first use in this function)
  101 |   if (nbr >= INT_MIN && nbr <= INT_MAX)
      |              ^~~~~~~
ft_putnbr_base.c:15:1: note: ‘INT_MIN’ is defined in header ‘<limits.h>’; did you forget to ‘#include <limits.h>’?
   14 | #include <unistd.h>
  +++ |+#include <limits.h>
   15 | 
ft_putnbr_base.c:101:14: note: each undeclared identifier is reported only once for each function it appears in
  101 |   if (nbr >= INT_MIN && nbr <= INT_MAX)
      |              ^~~~~~~
ft_putnbr_base.c:101:32: error: ‘INT_MAX’ undeclared (first use in this function)
  101 |   if (nbr >= INT_MIN && nbr <= INT_MAX)
      |                                ^~~~~~~
ft_putnbr_base.c:101:32: note: ‘INT_MAX’ is defined in header ‘<limits.h>’; did you forget to ‘#include <limits.h>’?
e3r11p9% 
e3r11p9% cat ft_putnbr_base.c                                   
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 14:53:18 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <unistd.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	return (result);
}

int	ft_checked_into_base(int *base_into_numbers, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (base_into_numbers && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && base_into_numbers[i])
		{
			if (c == base_into_numbers[i])
				return (0);
			i++;
		}
		result = i == base_len;
	}
	return (result);
}

int	ft_error_or_correct_base(int *numbers_for_base, const char *str
		, int base_len)
{
	int	i;

	numbers_for_base = (int *) malloc(base_len * sizeof(int));
	if (numbers_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(numbers_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				numbers_for_base[i] = str[i];
				i++;
			}
		}
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(int *numbers_for_base, const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(numbers_for_base, str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		*numbers_for_base;
	int		base_len;
	long	nbr_in_long;

	base_len = ft_error_or_base(numbers_for_base, base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			if (nbr_in_long < base_len)
				write(1, &numbers_for_base[nbr_in_long], 1);
			else
			{
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c        
ft_putnbr_base.c: OK!
e3r11p9% cat ft_putnbr_base.c                                     
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 14:54:54 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <limits.h>
#include <unistd.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	return (result);
}

int	ft_checked_into_base(int *base_into_numbers, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (base_into_numbers && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && base_into_numbers[i])
		{
			if (c == base_into_numbers[i])
				return (0);
			i++;
		}
		result = i == base_len;
	}
	return (result);
}

int	ft_error_or_correct_base(int *numbers_for_base, const char *str
		, int base_len)
{
	int	i;

	numbers_for_base = (int *) malloc(base_len * sizeof(int));
	if (numbers_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(numbers_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				numbers_for_base[i] = str[i];
				i++;
			}
		}
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(int *numbers_for_base, const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(numbers_for_base, str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		*numbers_for_base;
	int		base_len;
	long	nbr_in_long;

	base_len = ft_error_or_base(numbers_for_base, base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			if (nbr_in_long < base_len)
				write(1, &numbers_for_base[nbr_in_long], 1);
			else
			{
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_putnbr_base’:
ft_putnbr_base.c:99:13: error: ‘numbers_for_base’ is used uninitialized in this function [-Werror=uninitialized]
   99 |  base_len = ft_error_or_base(numbers_for_base, base);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c        
ft_putnbr_base.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_putnbr_base’:
ft_putnbr_base.c:101:13: error: ‘numbers_for_base’ is used uninitialized in this function [-Werror=uninitialized]
  101 |  base_len = ft_error_or_base(numbers_for_base, base);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c
/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/10/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x1b): undefined reference to `main'
collect2: error: ld returned 1 exit status
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c 
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 15:06 .
drwxr-xr-x 8 hauerbac 2023_paris  4096 Feb 20 10:12 ..
-rw-r--r-- 1 hauerbac 2023_paris  2905 Feb 20 15:05 ft_putnbr_base.c
-rwxr-xr-x 1 hauerbac 2023_paris 16256 Feb 20 15:06 test_ft_putnbr_base
-rw-r--r-- 1 hauerbac 2023_paris  1382 Feb 20 14:48 test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base 
42:
2a:
-2a:-
:
:
:
:%                                                                                                 e3r11p9% cat ft_putnbr_base.c                                           
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 15:05:56 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <stddef.h>
#include <limits.h>
#include <unistd.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	return (result);
}

int	ft_checked_into_base(int *base_into_numbers, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (base_into_numbers && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && base_into_numbers[i])
		{
			if (c == base_into_numbers[i])
				return (0);
			i++;
		}
		result = i == base_len;
	}
	return (result);
}

int	ft_error_or_correct_base(int *numbers_for_base, const char *str
		, int base_len)
{
	int	i;

	numbers_for_base = (int *) malloc(base_len * sizeof(int));
	if (numbers_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(numbers_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				numbers_for_base[i] = str[i];
				i++;
			}
		}
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(int *numbers_for_base, const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(numbers_for_base, str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		*numbers_for_base;
	int		base_len;
	long	nbr_in_long;

	numbers_for_base = NULL;
	base_len = ft_error_or_base(numbers_for_base, base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			if (nbr_in_long < base_len)
				write(1, &numbers_for_base[nbr_in_long], 1);
			else
			{
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_error_or_correct_base’:
ft_putnbr_base.c:81:88: error: format ‘%s’ expects argument of type ‘char *’, but argument 5 has type ‘int *’ [-Werror=format=]
   81 | ("ft_error_or_correct_base : base_len = %d i = %d str = %s numbers_for_base = %s\n", base_len, i, str, numbers_for_base);
      |                                                                               ~^                       ~~~~~~~~~~~~~~~~
      |                                                                                |                       |
      |                                                                                char *                  int *
      |                                                                               %ls
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_putnbr_base’:
ft_putnbr_base.c:117:52: error: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long int’ [-Werror=format=]
  117 |     printf("ft_putnbr_base : c = %c nbr_in_long = %d\n", numbers_for_base[nbr_in_long], nbr_in_long);
      |                                                   ~^                                    ~~~~~~~~~~~
      |                                                    |                                    |
      |                                                    int                                  long int
      |                                                   %ld
ft_putnbr_base.c:116:4: error: this ‘if’ clause does not guard... [-Werror=misleading-indentation]
  116 |    if (nbr_in_long < base_len)
      |    ^~
ft_putnbr_base.c:118:5: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
  118 |     write(1, &numbers_for_base[nbr_in_long], 1);
      |     ^~~~~
ft_putnbr_base.c:119:4: error: expected ‘}’ before ‘else’
  119 |    else
      |    ^~~~
ft_putnbr_base.c: At top level:
ft_putnbr_base.c:127:1: error: expected identifier or ‘(’ before ‘}’ token
  127 | }
      | ^
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_putnbr_base’:
ft_putnbr_base.c:118:52: error: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long int’ [-Werror=format=]
  118 |     printf("ft_putnbr_base : c = %c nbr_in_long = %d\n", numbers_for_base[nbr_in_long], nbr_in_long);
      |                                                   ~^                                    ~~~~~~~~~~~
      |                                                    |                                    |
      |                                                    int                                  long int
      |                                                   %ld
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% vi ft_putnbr_base.c
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                  
42:ft_error_or_strlen : 10
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : base_len = 10 base = 0123456789 nbr_in_long = 42
ft_error_or_strlen : 10
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
zsh: segmentation fault (core dumped)  ./test_ft_putnbr_base
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                  
42:ft_error_or_strlen : 10
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 42
zsh: segmentation fault (core dumped)  ./test_ft_putnbr_base
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_error_or_correct_base’:
ft_putnbr_base.c:67:58: error: format ‘%ld’ expects argument of type ‘long int’, but argument 2 has type ‘int *’ [-Werror=format=]
   67 |  printf("ft_error_or_correct_base : numbers_for_base = %ld\n", numbers_for_base);
      |                                                        ~~^     ~~~~~~~~~~~~~~~~
      |                                                          |     |
      |                                                          |     int *
      |                                                          long int
      |                                                        %ls
cc1: all warnings being treated as errors
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                  
42:ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 42
zsh: segmentation fault (core dumped)  ./test_ft_putnbr_base
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_putnbr_base’:
ft_putnbr_base.c:107:21: error: expected expression before ‘{’ token
  107 |  numbers_for_base = {};
      |                     ^
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
ft_putnbr_base.c: In function ‘ft_putnbr_base’:
ft_putnbr_base.c:107:19: error: expected expression before ‘]’ token
  107 |  numbers_for_base[] = {};
      |                   ^
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                  
42:ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 42
ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 10 base = 0123456789 nbr_in_long = 42
ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 4
ft_putnbr_base : c1 =  nbr_in_long = 4
ft_putnbr_base : c = � nbr_in_long = 4
�ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c = � nbr_in_long = 2
�
2a:ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 42
ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 16 base = 0123456789abcdef nbr_in_long = 42
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c = � nbr_in_long = 2
�ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 10
ft_putnbr_base : c1 =  nbr_in_long = 10
ft_putnbr_base : c = * nbr_in_long = 10
*
-2a:ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = -42
-ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 16 base = 0123456789abcdef nbr_in_long = 42
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c = � nbr_in_long = 2
�ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 10
ft_putnbr_base : c1 =  nbr_in_long = 10
ft_putnbr_base : c = � nbr_in_long = 10
�
:ft_error_or_strlen : 0

:ft_error_or_strlen : 1

:ft_error_or_strlen : 18
ft_error_or_correct_base : malloc size = 72
ft_error_or_correct_base : numbers_for_base = 

:%                                                                                                 e3r11p9% cat ft_putnbr_base.c                                                                 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 15:39:17 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <stddef.h>
#include <limits.h>
#include <unistd.h>
#include <stdio.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	printf("ft_error_or_strlen : %d\n", result); 
	return (result);
}

int	ft_checked_into_base(int *base_into_numbers, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (base_into_numbers && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && base_into_numbers[i])
		{
			if (c == base_into_numbers[i])
				return (0);
			i++;
		}
		result = i == base_len;
		printf("ft_checked_into_base : base_len = %d i = %d result = %d\n", base_len, i, result); 
	}
	return (result);
}

int	ft_error_or_correct_base(int *numbers_for_base, const char *str
		, int base_len)
{
	int	i;

	printf("ft_error_or_correct_base : malloc size = %ld\n", base_len * sizeof(int)); 
	numbers_for_base = (int *) malloc(base_len * sizeof(int));
	printf("ft_error_or_correct_base : numbers_for_base = %ls\n", numbers_for_base); 
	if (numbers_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(numbers_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				numbers_for_base[i] = str[i];
				i++;
			}
		}
		printf("ft_error_or_correct_base : base_len = %d i = %d str = %s\n", base_len, i, str); 
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(int *numbers_for_base, const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(numbers_for_base, str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		*numbers_for_base;
	int		test[1] = {0};
	int		base_len;
	long	nbr_in_long;

	//numbers_for_base = NULL;
	numbers_for_base = test;
	base_len = ft_error_or_base(numbers_for_base, base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			printf("ft_putnbr_base : nbr_in_long = %ld\n", nbr_in_long); 
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			printf("ft_putnbr_base : c1 = %c nbr_in_long = %ld\n", numbers_for_base[1], nbr_in_long); 
			if (nbr_in_long < base_len)
			{
				printf("ft_putnbr_base : c = %c nbr_in_long = %ld\n", numbers_for_base[nbr_in_long], nbr_in_long); 
				write(1, &numbers_for_base[nbr_in_long], 1);
			}
			else
			{
				printf("ft_putnbr_base : base_len = %d base = %s nbr_in_long = %ld\n", base_len, base, nbr_in_long); 
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                  
42:ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 42
ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 10 base = 0123456789 nbr_in_long = 42
ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 4
ft_putnbr_base : c1 =  nbr_in_long = 4
ft_putnbr_base : c =  nbr_in_long = 4
ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c =  nbr_in_long = 2

2a:ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 42
ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 16 base = 0123456789abcdef nbr_in_long = 42
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c =  nbr_in_long = 2
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 10
ft_putnbr_base : c1 =  nbr_in_long = 10
ft_putnbr_base : c =  nbr_in_long = 10

-2a:ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = -42
-ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 16 base = 0123456789abcdef nbr_in_long = 42
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c =  nbr_in_long = 2
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 10
ft_putnbr_base : c1 =  nbr_in_long = 10
ft_putnbr_base : c =  nbr_in_long = 10

:ft_error_or_strlen : 0

:ft_error_or_strlen : 1

:ft_error_or_strlen : 18
ft_error_or_correct_base : malloc size = 72
ft_error_or_correct_base : numbers_for_base = 

:%                                                                                                 e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                  
42:ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 42
ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 10 base = 0123456789 nbr_in_long = 42
ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 4
ft_putnbr_base : c1 =  nbr_in_long = 4
ft_putnbr_base : c =  nbr_in_long = 4
ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 40
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c =  nbr_in_long = 2

2a:ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 42
ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 16 base = 0123456789abcdef nbr_in_long = 42
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c =  nbr_in_long = 2
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 10
ft_putnbr_base : c1 =  nbr_in_long = 10
ft_putnbr_base : c =  nbr_in_long = 10

-2a:ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = -42
-ft_putnbr_base : c1 =  nbr_in_long = 42
ft_putnbr_base : base_len = 16 base = 0123456789abcdef nbr_in_long = 42
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 =  nbr_in_long = 2
ft_putnbr_base : c =  nbr_in_long = 2
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 64
ft_error_or_correct_base : numbers_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 10
ft_putnbr_base : c1 =  nbr_in_long = 10
ft_putnbr_base : c =  nbr_in_long = 10

:ft_error_or_strlen : 0

:ft_error_or_strlen : 1

:ft_error_or_strlen : 18
ft_error_or_correct_base : malloc size = 72
ft_error_or_correct_base : numbers_for_base = 

:% 
e3r11p9% cat ft_putnbr_base.c                                                                 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 15:47:47 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <stddef.h>
#include <limits.h>
#include <unistd.h>
#include <stdio.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	printf("ft_error_or_strlen : %d\n", result); 
	return (result);
}

int	ft_checked_into_base(int *base_into_numbers, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (base_into_numbers && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && base_into_numbers[i])
		{
			if (c == base_into_numbers[i])
				return (0);
			i++;
		}
		result = i == base_len;
		printf("ft_checked_into_base : base_len = %d i = %d result = %d\n", base_len, i, result); 
	}
	return (result);
}

int	ft_error_or_correct_base(int *numbers_for_base, const char *str
		, int base_len)
{
	int	i;

	printf("ft_error_or_correct_base : malloc size = %ld\n", base_len * sizeof(int)); 
	numbers_for_base = (int *) malloc(base_len * sizeof(int));
	printf("ft_error_or_correct_base : numbers_for_base = %ls\n", numbers_for_base); 
	if (numbers_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(numbers_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				numbers_for_base[i] = str[i];
				printf("ft_error_or_correct_base : i = %d c = %c\n", i, numbers_for_base[i]); 
				i++;
			}
		}
		printf("ft_error_or_correct_base : base_len = %d i = %d str = %s\n", base_len, i, str); 
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(int *numbers_for_base, const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(numbers_for_base, str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		*numbers_for_base;
	int		test[16] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
	int		base_len;
	long	nbr_in_long;

	//numbers_for_base = NULL;
	numbers_for_base = test;
	base_len = ft_error_or_base(numbers_for_base, base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			printf("ft_putnbr_base : nbr_in_long = %ld\n", nbr_in_long); 
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			printf("ft_putnbr_base : c1 = %c nbr_in_long = %ld\n", numbers_for_base[1], nbr_in_long); 
			if (nbr_in_long < base_len)
			{
				printf("ft_putnbr_base : c = %c nbr_in_long = %ld\n", numbers_for_base[nbr_in_long], nbr_in_long); 
				write(1, &numbers_for_base[nbr_in_long], 1);
			}
			else
			{
				printf("ft_putnbr_base : base_len = %d base = %s nbr_in_long = %ld\n", base_len, base, nbr_in_long); 
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                  
42:ft_putnbr_base : nbr = 42 base = 0123456789
ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 10
ft_error_or_correct_base : characters_for_base = 
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 42
ft_putnbr_base : c1 = 1 nbr_in_long = 42
ft_putnbr_base : base_len = 10 base = 0123456789 nbr_in_long = 42
ft_putnbr_base : nbr = 4 base = 0123456789
ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 10
ft_error_or_correct_base : characters_for_base = �6�c
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 4
ft_putnbr_base : c1 = 1 nbr_in_long = 4
ft_putnbr_base : c = 4 nbr_in_long = 4
4ft_putnbr_base : nbr = 2 base = 0123456789
ft_error_or_strlen : 10
ft_error_or_correct_base : malloc size = 10
ft_error_or_correct_base : characters_for_base = �6�c
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_error_or_correct_base : base_len = 10 i = 10 str = 0123456789
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 = 1 nbr_in_long = 2
ft_putnbr_base : c = 2 nbr_in_long = 2
2
2a:ft_putnbr_base : nbr = 42 base = 0123456789abcdef
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 16
ft_error_or_correct_base : characters_for_base = �6�c
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 42
ft_putnbr_base : c1 = 1 nbr_in_long = 42
ft_putnbr_base : base_len = 16 base = 0123456789abcdef nbr_in_long = 42
ft_putnbr_base : nbr = 2 base = 0123456789abcdef
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 16
ft_error_or_correct_base : characters_for_base = �6�c
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 = 1 nbr_in_long = 2
ft_putnbr_base : c = 2 nbr_in_long = 2
2ft_putnbr_base : nbr = 10 base = 0123456789abcdef
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 16
ft_error_or_correct_base : characters_for_base = �6�c
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 10
ft_putnbr_base : c1 = 1 nbr_in_long = 10
ft_putnbr_base : c = a nbr_in_long = 10
a
-2a:ft_putnbr_base : nbr = -42 base = 0123456789abcdef
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 16
ft_error_or_correct_base : characters_for_base = �6�c
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = -42
-ft_putnbr_base : c1 = 1 nbr_in_long = 42
ft_putnbr_base : base_len = 16 base = 0123456789abcdef nbr_in_long = 42
ft_putnbr_base : nbr = 2 base = 0123456789abcdef
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 16
ft_error_or_correct_base : characters_for_base = �6�c
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 2
ft_putnbr_base : c1 = 1 nbr_in_long = 2
ft_putnbr_base : c = 2 nbr_in_long = 2
2ft_putnbr_base : nbr = 10 base = 0123456789abcdef
ft_error_or_strlen : 16
ft_error_or_correct_base : malloc size = 16
ft_error_or_correct_base : characters_for_base = �6�c
ft_error_or_correct_base : i = 0 c = 0
ft_checked_into_base : base_len = 1 i = 1 result = 1
ft_error_or_correct_base : i = 1 c = 1
ft_checked_into_base : base_len = 2 i = 2 result = 1
ft_error_or_correct_base : i = 2 c = 2
ft_checked_into_base : base_len = 3 i = 3 result = 1
ft_error_or_correct_base : i = 3 c = 3
ft_checked_into_base : base_len = 4 i = 4 result = 1
ft_error_or_correct_base : i = 4 c = 4
ft_checked_into_base : base_len = 5 i = 5 result = 1
ft_error_or_correct_base : i = 5 c = 5
ft_checked_into_base : base_len = 6 i = 6 result = 1
ft_error_or_correct_base : i = 6 c = 6
ft_checked_into_base : base_len = 7 i = 7 result = 1
ft_error_or_correct_base : i = 7 c = 7
ft_checked_into_base : base_len = 8 i = 8 result = 1
ft_error_or_correct_base : i = 8 c = 8
ft_checked_into_base : base_len = 9 i = 9 result = 1
ft_error_or_correct_base : i = 9 c = 9
ft_checked_into_base : base_len = 10 i = 10 result = 1
ft_error_or_correct_base : i = 10 c = a
ft_checked_into_base : base_len = 11 i = 11 result = 1
ft_error_or_correct_base : i = 11 c = b
ft_checked_into_base : base_len = 12 i = 12 result = 1
ft_error_or_correct_base : i = 12 c = c
ft_checked_into_base : base_len = 13 i = 13 result = 1
ft_error_or_correct_base : i = 13 c = d
ft_checked_into_base : base_len = 14 i = 14 result = 1
ft_error_or_correct_base : i = 14 c = e
ft_checked_into_base : base_len = 15 i = 15 result = 1
ft_error_or_correct_base : i = 15 c = f
ft_error_or_correct_base : base_len = 16 i = 16 str = 0123456789abcdef
ft_putnbr_base : nbr_in_long = 10
ft_putnbr_base : c1 = 1 nbr_in_long = 10
ft_putnbr_base : c = a nbr_in_long = 10
a
:ft_putnbr_base : nbr = 42 base = 
ft_error_or_strlen : 0

:ft_putnbr_base : nbr = 42 base = 0
ft_error_or_strlen : 1

:ft_putnbr_base : nbr = 42 base = +-0123456789abcdef
ft_error_or_strlen : 18
ft_error_or_correct_base : malloc size = 18
ft_error_or_correct_base : characters_for_base = �6�c

:ft_putnbr_base : nbr = 42 base = 	0123456789abcdef
e3r11p9% cat ft_putnbr_base.c                                                                 
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 16:13:12 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <stddef.h>
#include <limits.h>
#include <unistd.h>
#include <stdio.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	printf("ft_error_or_strlen : %d\n", result); 
	return (result);
}

int	ft_checked_into_base(char *characters_for_base, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (characters_for_base && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && characters_for_base[i])
		{
			if (c == characters_for_base[i])
				return (0);
			i++;
		}
		result = i == base_len;
		printf("ft_checked_into_base : base_len = %d i = %d result = %d\n", base_len, i, result); 
	}
	return (result);
}

int	ft_error_or_correct_base(const char *str, int base_len)
{
	int	i;

	printf("ft_error_or_correct_base : malloc size = %ld\n", base_len * sizeof(char)); 
	char *characters_for_base = (char *) malloc(base_len * sizeof(char));
	printf("ft_error_or_correct_base : characters_for_base = %s\n", characters_for_base); 
	if (characters_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(characters_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				characters_for_base[i] = str[i];
				printf("ft_error_or_correct_base : i = %d c = %c\n", i, characters_for_base[i]); 
				i++;
			}
		}
		printf("ft_error_or_correct_base : base_len = %d i = %d str = %s\n", base_len, i, str); 
		free(characters_for_base);
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int	base_len;
	long	nbr_in_long;

	printf("ft_putnbr_base : nbr = %d base = %s\n", nbr, base); 
	base_len = ft_error_or_base(base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			printf("ft_putnbr_base : nbr_in_long = %ld\n", nbr_in_long); 
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			printf("ft_putnbr_base : c1 = %c nbr_in_long = %ld\n", base[1], nbr_in_long); 
			if (nbr_in_long < base_len)
			{
				printf("ft_putnbr_base : c = %c nbr_in_long = %ld\n", base[nbr_in_long], nbr_in_long); 
				write(1, &base[nbr_in_long], 1);
			}
			else
			{
				printf("ft_putnbr_base : base_len = %d base = %s nbr_in_long = %ld\n", base_len, base, nbr_in_long); 
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                  
42:42
2a:2a
-2a:-2a
:
:
:
:% 
e3r11p9% vi ft_putnbr_base.c                                                                    
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c                              
ft_putnbr_base.c: Error!
Error: VAR_DECL_START_FUNC  (line:  61, col:   1):	Variable declaration not at start of function
Error: SPACE_REPLACE_TAB    (line:  61, col:   9):	Found space when expecting tab
Error: MISALIGNED_VAR_DECL  (line:  61, col:  10):	Misaligned variable declaration
Error: DECL_ASSIGN_LINE     (line:  61, col:  31):	Declaration and assignation on a single line
Error: MISALIGNED_VAR_DECL  (line:  97, col:  13):	Misaligned variable declaration
e3r11p9% 
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: Error!
Error: MIXED_SPACE_TAB      (line:  60, col:   9):	Mixed spaces and tabs
Error: SPACE_REPLACE_TAB    (line:  60, col:   9):	Found space when expecting tab
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: Error!
Error: MISALIGNED_VAR_DECL  (line:  60, col:  13):	Misaligned variable declaration
e3r11p9% vi ft_putnbr_base.c                                      
e3r11p9% norminette -R CheckForbiddenSourceHeader ft_putnbr_base.c
ft_putnbr_base.c: OK!
e3r11p9% cat ft_putnbr_base.c                                   
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 16:23:05 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <stddef.h>
#include <limits.h>
#include <unistd.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	return (result);
}

int	ft_checked_into_base(char *characters_for_base, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (characters_for_base && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && characters_for_base[i])
		{
			if (c == characters_for_base[i])
				return (0);
			i++;
		}
		result = i == base_len;
	}
	return (result);
}

int	ft_error_or_correct_base(const char *str, int base_len)
{
	int		i;
	char	*characters_for_base;

	characters_for_base = (char *) malloc(base_len * sizeof(char));
	if (characters_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(characters_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				characters_for_base[i] = str[i];
				i++;
			}
		}
		free(characters_for_base);
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		base_len;
	long	nbr_in_long;

	base_len = ft_error_or_base(base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			if (nbr_in_long < base_len)
			{
				write(1, &base[nbr_in_long], 1);
			}
			else
			{
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_putnbr_base.c
test_ft_putnbr_base.c: OK!
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 16:23 .
drwxr-xr-x 8 hauerbac 2023_paris  4096 Feb 20 10:12 ..
-rw-r--r-- 1 hauerbac 2023_paris  2848 Feb 20 16:23 ft_putnbr_base.c
-rwxr-xr-x 1 hauerbac 2023_paris 16304 Feb 20 16:23 test_ft_putnbr_base
-rw-r--r-- 1 hauerbac 2023_paris  1382 Feb 20 14:48 test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base 
42:42
2a:2a
-2a:-2a
:
:
:
:%                                                                                                
% vi test_ft_putnbr_base.c                                 
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                 
42 en base 10:42
2a == 42 en base 16:2a
-2a == -42 en base 16:-2a
 (42 en base vide):
 (42 en base de taille 1):
 (42 en base 16 avec + et -):
 %                                                                                                e3r11p9% vi test_ft_putnbr_base.c                                                               
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
test_ft_putnbr_base.c: In function ‘main’:
test_ft_putnbr_base.c:22:44: error: stray ‘\’ in program
   22 |  write(1, "\n2a == 42 en base 16:", strlen(\n2a == 42 en base 16:"));
      |                                            ^
test_ft_putnbr_base.c:22:45: error: ‘n2a’ undeclared (first use in this function)
   22 |  write(1, "\n2a == 42 en base 16:", strlen(\n2a == 42 en base 16:"));
      |                                             ^~~
test_ft_putnbr_base.c:22:45: note: each undeclared identifier is reported only once for each function it appears in
test_ft_putnbr_base.c:22:54: error: expected ‘)’ before ‘en’
   22 |  write(1, "\n2a == 42 en base 16:", strlen(\n2a == 42 en base 16:"));
      |                                                      ^~~
      |                                                      )
test_ft_putnbr_base.c:22:66: error: missing terminating " character [-Werror]
   22 |  write(1, "\n2a == 42 en base 16:", strlen(\n2a == 42 en base 16:"));
      |                                                                  ^
test_ft_putnbr_base.c:22:66: error: missing terminating " character
   22 |  write(1, "\n2a == 42 en base 16:", strlen(\n2a == 42 en base 16:"));
      |                                                                  ^~~~
test_ft_putnbr_base.c:33:43: error: expected ‘)’ before ‘}’ token
   33 |  ft_putnbr_base(42, "\t0123456789abcdef");
      |                                           ^
      |                                           )
   34 | }
      | ~                                          
test_ft_putnbr_base.c:33:43: error: expected ‘;’ before ‘}’ token
   33 |  ft_putnbr_base(42, "\t0123456789abcdef");
      |                                           ^
      |                                           ;
   34 | }
      | ~                                          
cc1: all warnings being treated as errors
e3r11p9% vi test_ft_putnbr_base.c                                                               
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base                                                                 
42 en base 10:42
2a == 42 en base 16:2a
-2a == -42 en base 16:-2a
 (42 en base vide):
 (42 en base de taille 1):
 (42 en base 16 avec + et -):
 (42 en base 16 avec une tabulation):
10110 == 42 en base 2:101010
vn == 42 en base 8 ("poneyvif"):vn%                                                               e3r11p9% vi test_ft_putnbr_base.c                                                               
e3r11p9% norminette -R CheckForbiddenSourceHeader test_ft_putnbr_base.c                         
test_ft_putnbr_base.c: Error!
Error: LINE_TOO_LONG        (line:  28, col:  82):	line too long
Error: LINE_TOO_LONG        (line:  30, col:  87):	line too long
Error: LINE_TOO_LONG        (line:  32, col: 103):	line too long
Error: LINE_TOO_LONG        (line:  36, col:  93):	line too long
e3r11p9% gcc -Wall -Wextra -Werror -o test_ft_putnbr_base ft_putnbr_base.c test_ft_putnbr_base.c
e3r11p9% ls -al
total 32
drwxr-xr-x 2 hauerbac 2023_paris  4096 Feb 20 16:50 .
drwxr-xr-x 8 hauerbac 2023_paris  4096 Feb 20 10:12 ..
-rw-r--r-- 1 hauerbac 2023_paris  2848 Feb 20 16:23 ft_putnbr_base.c
-rwxr-xr-x 1 hauerbac 2023_paris 16304 Feb 20 16:50 test_ft_putnbr_base
-rw-r--r-- 1 hauerbac 2023_paris  2033 Feb 20 16:49 test_ft_putnbr_base.c
e3r11p9% ./test_ft_putnbr_base 
42 en base 10:42
2a == 42 en base 16:2a
-2a == -42 en base 16:-2a
 (42 en base vide):
 (42 en base de taille 1):
 (42 en base 16 avec + et -):
 (42 en base 16 avec une tabulation):
101010 == 42 en base 2:101010
vn == 42 en base 8 ("poneyvif"):vn%                                                               e3r11p9% cd ..
e3r11p9% cp ex04/ft_putnbr_base.c git_c_04/ex04/ft_putnbr_base.c
e3r11p9% cat ex04/ft_putnbr_base.c
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: hauerbac <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/20 14:09:00 by hauerbac          #+#    #+#             */
/*   Updated: 2023/02/20 16:23:05 by hauerbac         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <stddef.h>
#include <limits.h>
#include <unistd.h>

int	ft_error_or_strlen(const char *str)
{
	int	result;
	int	i;

	result = -1;
	i = 0;
	while (str && str[i] != '\0')
	{
		if (str[i] == ' ' || str[i] == '\f'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\t' || str[i] == '\v')
			return (0);
		i++;
	}
	result = i;
	return (result);
}

int	ft_checked_into_base(char *characters_for_base, char c, int base_len)
{
	int	i;
	int	result;

	result = 0;
	if (characters_for_base && c != '\0' && base_len > 0)
	{
		i = 0;
		while (i < base_len && characters_for_base[i])
		{
			if (c == characters_for_base[i])
				return (0);
			i++;
		}
		result = i == base_len;
	}
	return (result);
}

int	ft_error_or_correct_base(const char *str, int base_len)
{
	int		i;
	char	*characters_for_base;

	characters_for_base = (char *) malloc(base_len * sizeof(char));
	if (characters_for_base && str)
	{
		i = 0;
		while (i < base_len)
		{
			if (str[i] == '+' || str[i] == '-'
				|| (i > 0 && str[i]
					&& !ft_checked_into_base(characters_for_base, str[i], i)))
				return (0);
			else if (str[i] != '\0')
			{
				characters_for_base[i] = str[i];
				i++;
			}
		}
		free(characters_for_base);
		if (i == base_len)
			return (base_len);
	}
	return (0);
}

int	ft_error_or_base(const char *str)
{
	int	base_len;

	base_len = ft_error_or_strlen(str);
	if (base_len < 2)
		return (0);
	return (ft_error_or_correct_base(str, base_len));
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		base_len;
	long	nbr_in_long;

	base_len = ft_error_or_base(base);
	if (base_len)
	{
		if (nbr >= INT_MIN && nbr <= INT_MAX)
		{
			nbr_in_long = nbr;
			if (nbr_in_long < 0)
			{
				write(1, "-", 1);
				nbr_in_long = nbr_in_long * -1;
			}
			if (nbr_in_long < base_len)
			{
				write(1, &base[nbr_in_long], 1);
			}
			else
			{
				ft_putnbr_base(nbr_in_long / base_len, base);
				ft_putnbr_base(nbr_in_long % base_len, base);
			}
		}
	}
}
e3r11p9% norminette git_c_04/ex04/ft_putnbr_base.c
git_c_04/ex04/ft_putnbr_base.c: OK!
e3r11p9% cd git_c_04 
e3r11p9% git add ex04/ft_putnbr_base.c
e3r11p9% git commit -m "Addition of ex04 file"
[master 6dd707d] Addition of ex04 file
 Committer: Helene Auerbach <hauerbac@e3r11p9.clusters.42paris.fr>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 122 insertions(+)
 create mode 100644 ex04/ft_putnbr_base.c
e3r11p9% git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 1.10 KiB | 1.10 MiB/s, done.
Total 4 (delta 1), reused 0 (delta 0), pack-reused 0
remote: . Processing 1 references
remote: Processed 1 references in total
To vogsphere.42paris.fr:vogsphere/intra-uuid-d4eec565-5aac-454b-bfc9-f23dd065ac43-4702036-hauerbac
   e1c25dd..6dd707d  master -> master
e3r11p9% cd ..
e3r11p9% pwd
/mnt/nfs/homes/hauerbac/c_04
e3r11p9% mkdir ex05
e3r11p9% mkdir git_c_04/ex05
e3r11p9% cd ex05



